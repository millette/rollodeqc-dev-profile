[
 {
  "id": "3986721073",
  "type": "IssuesEvent",
  "repo": {
   "id": 58303578,
   "name": "Ezibenroc/PyRoaringBitMap"
  },
  "payload": {
   "action": "opened",
   "issue": {
    "id": 153673231,
    "number": 1,
    "title": "More complete wrapper...",
    "labels": [],
    "state": "open",
    "created_at": "2016-05-08T19:31:32Z",
    "updated_at": "2016-05-08T19:31:32Z",
    "body": "Excellent work. There are a few extra functions you may want to support.\r\n\r\n``roaring_bitmap_or_many`` : https://github.com/RoaringBitmap/CRoaring/blob/master/include/roaring.h#L84\r\n\r\nAs well as, possibly, the basic serialization functions such as ``roaring_bitmap_portable_deserialize``, ``roaring_bitmap_portable_serialize``.\r\n\r\n\r\n"
   }
  },
  "public": true,
  "created_at": "2016-05-08T19:31:33Z"
 },
 {
  "id": "3986714786",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1101892614,
   "ref": "refs/heads/performance/cow",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "917b80072a06358025d1c45b9a054df9902591f2": "Adding a link to Python wrapper"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-08T19:27:06Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3986711626",
  "type": "WatchEvent",
  "repo": {
   "id": 58303578,
   "name": "Ezibenroc/PyRoaringBitMap"
  },
  "payload": {
   "action": "started"
  },
  "public": true,
  "created_at": "2016-05-08T19:24:50Z"
 },
 {
  "id": "3986706782",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 153633881,
    "number": 30,
    "title": "Implemented copy-on-write (CoW) at the container level. ",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "help wanted",
     "new feature",
     "performance"
    ],
    "state": "open",
    "milestone": {
     "url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/3",
     "html_url": "https://github.com/RoaringBitmap/CRoaring/milestones/0.0.2:%20Research%20%22complete%22%20prototype",
     "labels_url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/3/labels",
     "id": 1752618,
     "number": 3,
     "title": "0.0.2: Research \"complete\" prototype",
     "description": "",
     "creator": {
      "login": "lemire",
      "id": 391987,
      "avatar_url": "https://avatars.githubusercontent.com/u/391987?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemire",
      "html_url": "https://github.com/lemire",
      "followers_url": "https://api.github.com/users/lemire/followers",
      "following_url": "https://api.github.com/users/lemire/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemire/subscriptions",
      "organizations_url": "https://api.github.com/users/lemire/orgs",
      "repos_url": "https://api.github.com/users/lemire/repos",
      "events_url": "https://api.github.com/users/lemire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemire/received_events",
      "type": "User",
      "site_admin": false
     },
     "open_issues": 2,
     "closed_issues": 0,
     "state": "open",
     "created_at": "2016-05-07T00:00:45Z",
     "updated_at": "2016-05-08T03:51:03Z",
     "due_on": "2016-05-28T04:00:00Z",
     "closed_at": null
    },
    "comments": 4,
    "created_at": "2016-05-08T03:51:03Z",
    "updated_at": "2016-05-08T19:21:18Z",
    "pull_request": {
     "url": "https://api.github.com/repos/RoaringBitmap/CRoaring/pulls/30",
     "html_url": "https://github.com/RoaringBitmap/CRoaring/pull/30",
     "diff_url": "https://github.com/RoaringBitmap/CRoaring/pull/30.diff",
     "patch_url": "https://github.com/RoaringBitmap/CRoaring/pull/30.patch"
    },
    "body": "This seems to pass our unit tests and it seems to generally help our performance without doing any harm.\r\n\r\nBasically, it helps the performance when you would otherwise have to clone containers needlessly. It is not just the copying, but also the memory usage, the memory allocation and so forth. How often this happens depends very much on the data. However, avoiding even just one container copy can maybe be worth it.\r\n\r\nTo see how much it can help, here is the number of cycles per input value for successive unions in the census1881 data set. \r\n\r\n> Before (no CoW): 1.24 \r\n> After (with CoW):  0.49 \r\n\r\nTo my surprise, there is at least one instance where we can double the performance with CoW.\r\n\r\nIt does, however, slightly increase the code complexity. Maybe surprisingly, however, it is not so difficult to implement. It is possible however that I introduced memory leaks and so forth. Thread safety might be diminished as well, maybe. I don't know.\r\n\r\nBefore merging this with ``master``, I'd like for at least on fresh pair of eyes to review it. Indeed, if we adopt this, then it will have long-term consequences regarding maintenance and future work.\r\n\r\nIt is likely, also, that I have let bugs slip.\r\n\r\nc.c. @owenkaser  @fsaintjacques \r\n\r\n"
   },
   "comment": {
    "id": 217740729,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-08T19:21:18Z",
    "updated_at": "2016-05-08T19:21:18Z",
    "body": "This is meant to satisfy issue 29 https://github.com/RoaringBitmap/CRoaring/issues/29"
   }
  },
  "public": true,
  "created_at": "2016-05-08T19:21:19Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3986706252",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 153560072,
    "number": 29,
    "title": "Implement and test copy-on-write",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "performance"
    ],
    "state": "open",
    "assignee": {
     "login": "lemire",
     "id": 391987,
     "avatar_url": "https://avatars.githubusercontent.com/u/391987?v=3",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lemire",
     "html_url": "https://github.com/lemire",
     "followers_url": "https://api.github.com/users/lemire/followers",
     "following_url": "https://api.github.com/users/lemire/following{/other_user}",
     "gists_url": "https://api.github.com/users/lemire/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lemire/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lemire/subscriptions",
     "organizations_url": "https://api.github.com/users/lemire/orgs",
     "repos_url": "https://api.github.com/users/lemire/repos",
     "events_url": "https://api.github.com/users/lemire/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lemire/received_events",
     "type": "User",
     "site_admin": false
    },
    "milestone": {
     "url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/3",
     "html_url": "https://github.com/RoaringBitmap/CRoaring/milestones/0.0.2:%20Research%20%22complete%22%20prototype",
     "labels_url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/3/labels",
     "id": 1752618,
     "number": 3,
     "title": "0.0.2: Research \"complete\" prototype",
     "description": "",
     "creator": {
      "login": "lemire",
      "id": 391987,
      "avatar_url": "https://avatars.githubusercontent.com/u/391987?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemire",
      "html_url": "https://github.com/lemire",
      "followers_url": "https://api.github.com/users/lemire/followers",
      "following_url": "https://api.github.com/users/lemire/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemire/subscriptions",
      "organizations_url": "https://api.github.com/users/lemire/orgs",
      "repos_url": "https://api.github.com/users/lemire/repos",
      "events_url": "https://api.github.com/users/lemire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemire/received_events",
      "type": "User",
      "site_admin": false
     },
     "open_issues": 2,
     "closed_issues": 0,
     "state": "open",
     "created_at": "2016-05-07T00:00:45Z",
     "updated_at": "2016-05-08T03:51:03Z",
     "due_on": "2016-05-28T04:00:00Z",
     "closed_at": null
    },
    "comments": 2,
    "created_at": "2016-05-06T23:59:23Z",
    "updated_at": "2016-05-08T19:20:54Z",
    "body": "In progress at https://github.com/RoaringBitmap/CRoaring/tree/performance/cow"
   },
   "comment": {
    "id": 217740703,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-08T19:20:54Z",
    "updated_at": "2016-05-08T19:20:54Z",
    "body": "Implemented in this PR: https://github.com/RoaringBitmap/CRoaring/pull/30"
   }
  },
  "public": true,
  "created_at": "2016-05-08T19:20:57Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3986331170",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 153633881,
    "number": 30,
    "title": "Implemented copy-on-write (CoW) at the container level. ",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "help wanted",
     "new feature",
     "performance"
    ],
    "state": "open",
    "milestone": {
     "url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/3",
     "html_url": "https://github.com/RoaringBitmap/CRoaring/milestones/0.0.2:%20Research%20%22complete%22%20prototype",
     "labels_url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/3/labels",
     "id": 1752618,
     "number": 3,
     "title": "0.0.2: Research \"complete\" prototype",
     "description": "",
     "creator": {
      "login": "lemire",
      "id": 391987,
      "avatar_url": "https://avatars.githubusercontent.com/u/391987?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemire",
      "html_url": "https://github.com/lemire",
      "followers_url": "https://api.github.com/users/lemire/followers",
      "following_url": "https://api.github.com/users/lemire/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemire/subscriptions",
      "organizations_url": "https://api.github.com/users/lemire/orgs",
      "repos_url": "https://api.github.com/users/lemire/repos",
      "events_url": "https://api.github.com/users/lemire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemire/received_events",
      "type": "User",
      "site_admin": false
     },
     "open_issues": 2,
     "closed_issues": 0,
     "state": "open",
     "created_at": "2016-05-07T00:00:45Z",
     "updated_at": "2016-05-08T03:51:03Z",
     "due_on": "2016-05-28T04:00:00Z",
     "closed_at": null
    },
    "comments": 2,
    "created_at": "2016-05-08T03:51:03Z",
    "updated_at": "2016-05-08T14:13:29Z",
    "pull_request": {
     "url": "https://api.github.com/repos/RoaringBitmap/CRoaring/pulls/30",
     "html_url": "https://github.com/RoaringBitmap/CRoaring/pull/30",
     "diff_url": "https://github.com/RoaringBitmap/CRoaring/pull/30.diff",
     "patch_url": "https://github.com/RoaringBitmap/CRoaring/pull/30.patch"
    },
    "body": "This seems to pass our unit tests and it seems to generally help our performance without doing any harm.\r\n\r\nBasically, it helps the performance when you would otherwise have to clone containers needlessly. It is not just the copying, but also the memory usage, the memory allocation and so forth. How often this happens depends very much on the data. However, avoiding even just one container copy can maybe be worth it.\r\n\r\nTo see how much it can help, here is the number of cycles per input value for successive unions in the census1881 data set. \r\n\r\n> Before (no CoW): 1.24 \r\n> After (with CoW):  0.49 \r\n\r\nTo my surprise, there is at least one instance where we can double the performance with CoW.\r\n\r\nIt does, however, slightly increase the code complexity. Maybe surprisingly, however, it is not so difficult to implement. It is possible however that I introduced memory leaks and so forth. Thread safety might be diminished as well, maybe. I don't know.\r\n\r\nBefore merging this with ``master``, I'd like for at least on fresh pair of eyes to review it. Indeed, if we adopt this, then it will have long-term consequences regarding maintenance and future work.\r\n\r\nIt is likely, also, that I have let bugs slip.\r\n\r\nc.c. @owenkaser  @fsaintjacques \r\n\r\n"
   },
   "comment": {
    "id": 217722498,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-08T14:13:29Z",
    "updated_at": "2016-05-08T14:13:29Z",
    "body": "Please keep hunting for bugs. I am sure that are more... ;-)"
   }
  },
  "public": true,
  "created_at": "2016-05-08T14:13:29Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3986330850",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 153633881,
    "number": 30,
    "title": "Implemented copy-on-write (CoW) at the container level. ",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "help wanted",
     "new feature",
     "performance"
    ],
    "state": "open",
    "milestone": {
     "url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/3",
     "html_url": "https://github.com/RoaringBitmap/CRoaring/milestones/0.0.2:%20Research%20%22complete%22%20prototype",
     "labels_url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/3/labels",
     "id": 1752618,
     "number": 3,
     "title": "0.0.2: Research \"complete\" prototype",
     "description": "",
     "creator": {
      "login": "lemire",
      "id": 391987,
      "avatar_url": "https://avatars.githubusercontent.com/u/391987?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemire",
      "html_url": "https://github.com/lemire",
      "followers_url": "https://api.github.com/users/lemire/followers",
      "following_url": "https://api.github.com/users/lemire/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemire/subscriptions",
      "organizations_url": "https://api.github.com/users/lemire/orgs",
      "repos_url": "https://api.github.com/users/lemire/repos",
      "events_url": "https://api.github.com/users/lemire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemire/received_events",
      "type": "User",
      "site_admin": false
     },
     "open_issues": 2,
     "closed_issues": 0,
     "state": "open",
     "created_at": "2016-05-07T00:00:45Z",
     "updated_at": "2016-05-08T03:51:03Z",
     "due_on": "2016-05-28T04:00:00Z",
     "closed_at": null
    },
    "comments": 2,
    "created_at": "2016-05-08T03:51:03Z",
    "updated_at": "2016-05-08T14:13:11Z",
    "pull_request": {
     "url": "https://api.github.com/repos/RoaringBitmap/CRoaring/pulls/30",
     "html_url": "https://github.com/RoaringBitmap/CRoaring/pull/30",
     "diff_url": "https://github.com/RoaringBitmap/CRoaring/pull/30.diff",
     "patch_url": "https://github.com/RoaringBitmap/CRoaring/pull/30.patch"
    },
    "body": "This seems to pass our unit tests and it seems to generally help our performance without doing any harm.\r\n\r\nBasically, it helps the performance when you would otherwise have to clone containers needlessly. It is not just the copying, but also the memory usage, the memory allocation and so forth. How often this happens depends very much on the data. However, avoiding even just one container copy can maybe be worth it.\r\n\r\nTo see how much it can help, here is the number of cycles per input value for successive unions in the census1881 data set. \r\n\r\n> Before (no CoW): 1.24 \r\n> After (with CoW):  0.49 \r\n\r\nTo my surprise, there is at least one instance where we can double the performance with CoW.\r\n\r\nIt does, however, slightly increase the code complexity. Maybe surprisingly, however, it is not so difficult to implement. It is possible however that I introduced memory leaks and so forth. Thread safety might be diminished as well, maybe. I don't know.\r\n\r\nBefore merging this with ``master``, I'd like for at least on fresh pair of eyes to review it. Indeed, if we adopt this, then it will have long-term consequences regarding maintenance and future work.\r\n\r\nIt is likely, also, that I have let bugs slip.\r\n\r\nc.c. @owenkaser  @fsaintjacques \r\n\r\n"
   },
   "comment": {
    "id": 217722480,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-08T14:13:11Z",
    "updated_at": "2016-05-08T14:13:11Z",
    "body": "@Ezibenroc \r\n\r\nHopefully fixed with this commit : \r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/pull/30#issuecomment-217704058\r\n\r\n"
   }
  },
  "public": true,
  "created_at": "2016-05-08T14:13:11Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3986329786",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1101732214,
   "ref": "refs/heads/performance/cow",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "8837b0dbf6edc2cde2f38a5cfd88a5fa92cf4bff": "Fixed bug reported by @Ezibenroc regarding PR https://github.com/RoaringBitmap/CRoaring/pull/30\nat comment https://github.com/RoaringBitmap/CRoaring/pull/30#issuecomment-217704058"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-08T14:12:11Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3985747559",
  "type": "PullRequestEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "opened",
   "number": 30,
   "pull_request": {
    "id": 69259793,
    "state": "open",
    "title": "Implemented copy-on-write (CoW) at the container level. ",
    "body": "This seems to pass our unit tests and it seems to generally help our performance without doing any harm.\r\n\r\nBasically, it helps the performance when you would otherwise have to clone containers needlessly. It is not just the copying, but also the memory usage, the memory allocation and so forth. How often this happens depends very much on the data. However, avoiding even just one container copy can maybe be worth it.\r\n\r\nTo see how much it can help, here is the number of cycles per input value for successive unions in the census1881 data set. \r\n\r\n> Before (no CoW): 1.24 \r\n> After (with CoW):  0.49 \r\n\r\nTo my surprise, there is at least one instance where we can double the performance with CoW.\r\n\r\nIt does, however, slightly increase the code complexity. Maybe surprisingly, however, it is not so difficult to implement. It is possible however that I introduced memory leaks and so forth. Thread safety might be diminished as well, maybe. I don't know.\r\n\r\nBefore merging this with ``master``, I'd like for at least on fresh pair of eyes to review it. Indeed, if we adopt this, then it will have long-term consequences regarding maintenance and future work.\r\n\r\nIt is likely, also, that I have let bugs slip.\r\n\r\nc.c. @owenkaser  @fsaintjacques \r\n\r\n",
    "created_at": "2016-05-08T03:51:03Z",
    "updated_at": "2016-05-08T03:51:03Z",
    "milestone": {
     "url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/3",
     "html_url": "https://github.com/RoaringBitmap/CRoaring/milestones/0.0.2:%20Research%20%22complete%22%20prototype",
     "labels_url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/3/labels",
     "id": 1752618,
     "number": 3,
     "title": "0.0.2: Research \"complete\" prototype",
     "description": "",
     "creator": {
      "login": "lemire",
      "id": 391987,
      "avatar_url": "https://avatars.githubusercontent.com/u/391987?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemire",
      "html_url": "https://github.com/lemire",
      "followers_url": "https://api.github.com/users/lemire/followers",
      "following_url": "https://api.github.com/users/lemire/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemire/subscriptions",
      "organizations_url": "https://api.github.com/users/lemire/orgs",
      "repos_url": "https://api.github.com/users/lemire/repos",
      "events_url": "https://api.github.com/users/lemire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemire/received_events",
      "type": "User",
      "site_admin": false
     },
     "open_issues": 2,
     "closed_issues": 0,
     "state": "open",
     "created_at": "2016-05-07T00:00:45Z",
     "updated_at": "2016-05-08T03:51:03Z",
     "due_on": "2016-05-28T04:00:00Z",
     "closed_at": null
    },
    "mergeable_state": "unknown",
    "commits": 1,
    "additions": 419,
    "deletions": 192,
    "changed_files": 14,
    "merged_by": {}
   }
  },
  "public": true,
  "created_at": "2016-05-08T03:51:03Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3985737214",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1101488027,
   "ref": "refs/heads/performance/cow",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "22c4010f51ea4e87a27ad681ce11c016bb0e34e9": "Implemented copy-on-write at the container level."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-08T03:36:45Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3985722957",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1101481722,
   "ref": "refs/heads/performance/cow",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "dbf43675178cac94674b45803863af69dbcde717": "COW passes our unit tests which might be an indication of how weak our unit tests are."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-08T03:18:22Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3985672920",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1101459213,
   "ref": "refs/heads/performance/cow",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "ad6e206b9494dfc1b8e60beaa848d5787f2838df": "Does not pass unit tests, but compiles."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-08T02:12:55Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3985591023",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1101423029,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "99b52bec9400c1cb3183906bf5bf94601cbe1fe6": "Updating CRoaring"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-08T00:32:25Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3985532581",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1101398288,
   "ref": "refs/heads/performance/cow",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "7d88e7f22007d6d9396579b7c20e08971a9948bc": "Still mostly garbage. It will be some time before I even try to compile."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-07T23:24:04Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3985525607",
  "type": "PushEvent",
  "repo": {
   "id": 1468436,
   "name": "lemire/rollinghashjava"
  },
  "payload": {
   "push_id": 1101395334,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "1b4aa828bbf5789ee696a65763488cd7a6a852f5": "Removing author's name from README.md"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-07T23:15:49Z"
 },
 {
  "id": "3985525209",
  "type": "PushEvent",
  "repo": {
   "id": 1468436,
   "name": "lemire/rollinghashjava"
  },
  "payload": {
   "push_id": 1101395177,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "2736ed10404e8dcbda45106601d013710bb3a519": "Better looking example."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-07T23:15:21Z"
 },
 {
  "id": "3985523096",
  "type": "PushEvent",
  "repo": {
   "id": 1468436,
   "name": "lemire/rollinghashjava"
  },
  "payload": {
   "push_id": 1101394275,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "nielsole.kuehl@gmail.com",
      "name": "nielsole"
     },
     {
      "46eeab7a1f733c99525e7572b5f56092d96d7f92": "Code sample not working\n\nHey, thanks for the repository.\r\nI was unable to get the sample code running. It should work now."
     }
    ],
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "d4b71a749427eacce0860a4768cc9659480a6fc5": "Merge pull request #1 from nielsole/patch-1\n\nCode sample not working"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-07T23:12:58Z"
 },
 {
  "id": "3985523089",
  "type": "PullRequestEvent",
  "repo": {
   "id": 1468436,
   "name": "lemire/rollinghashjava"
  },
  "payload": {
   "action": "closed",
   "number": 1,
   "pull_request": {
    "id": 69255685,
    "state": "closed",
    "title": "Code sample not working",
    "body": "Hey, thanks for the repository.\r\nI was unable to get the sample code running (Out of bounds error). It should work now.",
    "created_at": "2016-05-07T23:12:07Z",
    "updated_at": "2016-05-07T23:12:57Z",
    "closed_at": "2016-05-07T23:12:57Z",
    "merged_at": "2016-05-07T23:12:57Z",
    "merge_commit_sha": "d4b71a749427eacce0860a4768cc9659480a6fc5",
    "merged": true,
    "mergeable_state": "unknown",
    "merged_by": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "comments": 1,
    "commits": 1,
    "additions": 1,
    "deletions": 1,
    "changed_files": 1
   }
  },
  "public": true,
  "created_at": "2016-05-07T23:12:58Z"
 },
 {
  "id": "3985523044",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 1468436,
   "name": "lemire/rollinghashjava"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 153623281,
    "number": 1,
    "title": "Code sample not working",
    "user": {
     "login": "nielsole",
     "id": 8849712,
     "type": "User"
    },
    "state": "open",
    "comments": 1,
    "created_at": "2016-05-07T23:12:07Z",
    "updated_at": "2016-05-07T23:12:54Z",
    "pull_request": {
     "url": "https://api.github.com/repos/lemire/rollinghashjava/pulls/1",
     "html_url": "https://github.com/lemire/rollinghashjava/pull/1",
     "diff_url": "https://github.com/lemire/rollinghashjava/pull/1.diff",
     "patch_url": "https://github.com/lemire/rollinghashjava/pull/1.patch"
    },
    "body": "Hey, thanks for the repository.\r\nI was unable to get the sample code running (Out of bounds error). It should work now."
   },
   "comment": {
    "id": 217674761,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-07T23:12:54Z",
    "updated_at": "2016-05-07T23:12:54Z",
    "body": "Excellent. Sorry about this."
   }
  },
  "public": true,
  "created_at": "2016-05-07T23:12:54Z"
 },
 {
  "id": "3985476210",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 12088639,
   "name": "atom/tabs"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 85403042,
    "number": 160,
    "title": "Tab of deleted file should be closed",
    "user": {
     "login": "adambuczynski",
     "id": 490562,
     "type": "User"
    },
    "labels": [
     "atom",
     "enhancement"
    ],
    "state": "closed",
    "comments": 42,
    "created_at": "2015-06-05T03:28:24Z",
    "updated_at": "2016-05-07T22:22:08Z",
    "closed_at": "2016-03-08T18:56:27Z",
    "body": "When you delete a file, if it was open in a tab I think the tab should be closed.\r\n\r\nWhat happens now, is that after deleting a file from within tree view, the tab remains open with the file being in trash. Then when you want to close the window, you get a confirmation screen asking you if you want to save the file or not. This is pretty annoying and seems redundant. Deleting a file already comes with it's own confirmation dialog.\r\n\r\nIf this is an issue for atom/tree-view let me know and I'll re-post there."
   },
   "comment": {
    "id": 217672389,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-07T22:22:08Z",
    "updated_at": "2016-05-07T22:22:08Z",
    "body": "@adambuczynski \r\n\r\nI totally agree that if you delete the file *within Atom* then there should be one confirmation dialog and then the file and the buffer should be gone.\r\n\r\nI am not arguing for a total reversal of this feature, but rather for a partial reversal or an adjustment so that the behavior is in line with other editors."
   }
  },
  "public": true,
  "created_at": "2016-05-07T22:22:10Z",
  "org": {
   "id": 1089146,
   "login": "atom",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/atom",
   "avatar_url": "https://avatars.githubusercontent.com/u/1089146?"
  }
 },
 {
  "id": "3985465938",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 12088639,
   "name": "atom/tabs"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 85403042,
    "number": 160,
    "title": "Tab of deleted file should be closed",
    "user": {
     "login": "adambuczynski",
     "id": 490562,
     "type": "User"
    },
    "labels": [
     "atom",
     "enhancement"
    ],
    "state": "closed",
    "comments": 40,
    "created_at": "2015-06-05T03:28:24Z",
    "updated_at": "2016-05-07T22:11:33Z",
    "closed_at": "2016-03-08T18:56:27Z",
    "body": "When you delete a file, if it was open in a tab I think the tab should be closed.\r\n\r\nWhat happens now, is that after deleting a file from within tree view, the tab remains open with the file being in trash. Then when you want to close the window, you get a confirmation screen asking you if you want to save the file or not. This is pretty annoying and seems redundant. Deleting a file already comes with it's own confirmation dialog.\r\n\r\nIf this is an issue for atom/tree-view let me know and I'll re-post there."
   },
   "comment": {
    "id": 217671603,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-07T22:11:33Z",
    "updated_at": "2016-05-07T22:11:33Z",
    "body": "@adambuczynski @lee-dohm \r\n\r\nI'll take the discussion there, but considering that every single IDE, word processor or text editor that I have tried does not follow this new pattern... I am arguing that this new behavior is likely to take users by surprise. "
   }
  },
  "public": true,
  "created_at": "2016-05-07T22:11:33Z",
  "org": {
   "id": 1089146,
   "login": "atom",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/atom",
   "avatar_url": "https://avatars.githubusercontent.com/u/1089146?"
  }
 },
 {
  "id": "3985460121",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 12088639,
   "name": "atom/tabs"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 148940902,
    "number": 306,
    "title": "Provide option to allow keeping open deleted tabs",
    "user": {
     "login": "vjpr",
     "id": 281413,
     "type": "User"
    },
    "state": "open",
    "comments": 3,
    "created_at": "2016-04-17T10:53:25Z",
    "updated_at": "2016-05-07T22:05:47Z",
    "body": "I have some testing code that regenerates a directory structure each run. I would like to keep a tab open to observe the changes to the file when it is regenerated.\r\n\r\nThis make its difficult to check changes from generated files, such as transpilation output, etc.\r\n\r\nAfter #160, the tab is removed, even though it is regenerated again within seconds, before the window gets focus again.\r\n\r\nSublime Text keeps them open, and only updates on focus.\r\n\r\nI think there should be an option to allow only refreshing/deleting tabs on window focus.\r\n"
   },
   "comment": {
    "id": 217671393,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-07T22:05:46Z",
    "updated_at": "2016-05-07T22:05:46Z",
    "body": "Suppose you have a file opened in Eclipse, Microsoft Word, or just about anything that looks like an editor, and the file on disk is deleted by another system, I think you will find that the in-memory buffer is not automatically flushed.\r\n\r\nThus I argue that Atom's behavior is surprising.\r\n\r\nWe can argue about what behavior is best, but I would strongly argue against surprises."
   }
  },
  "public": true,
  "created_at": "2016-05-07T22:05:47Z",
  "org": {
   "id": 1089146,
   "login": "atom",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/atom",
   "avatar_url": "https://avatars.githubusercontent.com/u/1089146?"
  }
 },
 {
  "id": "3985458134",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 12088639,
   "name": "atom/tabs"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 148940902,
    "number": 306,
    "title": "Provide option to allow keeping open deleted tabs",
    "user": {
     "login": "vjpr",
     "id": 281413,
     "type": "User"
    },
    "state": "open",
    "comments": 2,
    "created_at": "2016-04-17T10:53:25Z",
    "updated_at": "2016-05-07T22:03:53Z",
    "body": "I have some testing code that regenerates a directory structure each run. I would like to keep a tab open to observe the changes to the file when it is regenerated.\r\n\r\nThis make its difficult to check changes from generated files, such as transpilation output, etc.\r\n\r\nAfter #160, the tab is removed, even though it is regenerated again within seconds, before the window gets focus again.\r\n\r\nSublime Text keeps them open, and only updates on focus.\r\n\r\nI think there should be an option to allow only refreshing/deleting tabs on window focus.\r\n"
   },
   "comment": {
    "id": 217671318,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-07T22:03:53Z",
    "updated_at": "2016-05-07T22:03:53Z",
    "body": "Reposting my comment from another issue:\r\n\r\n> Suppose that you have opened some file generated by a system. This system does its work concurrently which may involve changing, deleting or moving files. You are reading the file... and then, all of a sudden, the text you are reading goes away... without any kind of warning.\r\n> \r\n> I think that this behavior would take most users by surprise. Taking users by surprise is not good.\r\n> \r\n> The ugly workaround is that you have to make copies, then open the copy in Atom. But an in-memory buffer is already a copy.\r\n\r\n"
   }
  },
  "public": true,
  "created_at": "2016-05-07T22:03:54Z",
  "org": {
   "id": 1089146,
   "login": "atom",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/atom",
   "avatar_url": "https://avatars.githubusercontent.com/u/1089146?"
  }
 },
 {
  "id": "3985450498",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 12088639,
   "name": "atom/tabs"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 85403042,
    "number": 160,
    "title": "Tab of deleted file should be closed",
    "user": {
     "login": "adambuczynski",
     "id": 490562,
     "type": "User"
    },
    "labels": [
     "atom",
     "enhancement"
    ],
    "state": "closed",
    "comments": 37,
    "created_at": "2015-06-05T03:28:24Z",
    "updated_at": "2016-05-07T21:56:59Z",
    "closed_at": "2016-03-08T18:56:27Z",
    "body": "When you delete a file, if it was open in a tab I think the tab should be closed.\r\n\r\nWhat happens now, is that after deleting a file from within tree view, the tab remains open with the file being in trash. Then when you want to close the window, you get a confirmation screen asking you if you want to save the file or not. This is pretty annoying and seems redundant. Deleting a file already comes with it's own confirmation dialog.\r\n\r\nIf this is an issue for atom/tree-view let me know and I'll re-post there."
   },
   "comment": {
    "id": 217671058,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-07T21:56:59Z",
    "updated_at": "2016-05-07T21:56:59Z",
    "body": "@adambuczynski I think only Atom behaves this way.\r\n\r\nSuppose that you have opened some  file generated by a system. This system does its work concurrently which may involve changing, deleting or moving files. You are reading the file... and then, all of a sudden, the text you are reading goes away... without any kind of warning.\r\n\r\nI think that this behavior would take most users by surprise. Taking users by surprise is not good.\r\n\r\nThe ugly workaround is that you have to make copies, then open the copy in Atom. But an in-memory buffer is already a copy.\r\n"
   }
  },
  "public": true,
  "created_at": "2016-05-07T21:56:59Z",
  "org": {
   "id": 1089146,
   "login": "atom",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/atom",
   "avatar_url": "https://avatars.githubusercontent.com/u/1089146?"
  }
 },
 {
  "id": "3984834489",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 12088639,
   "name": "atom/tabs"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 85403042,
    "number": 160,
    "title": "Tab of deleted file should be closed",
    "user": {
     "login": "adambuczynski",
     "id": 490562,
     "type": "User"
    },
    "labels": [
     "atom",
     "enhancement"
    ],
    "state": "closed",
    "comments": 34,
    "created_at": "2015-06-05T03:28:24Z",
    "updated_at": "2016-05-07T13:15:26Z",
    "closed_at": "2016-03-08T18:56:27Z",
    "body": "When you delete a file, if it was open in a tab I think the tab should be closed.\r\n\r\nWhat happens now, is that after deleting a file from within tree view, the tab remains open with the file being in trash. Then when you want to close the window, you get a confirmation screen asking you if you want to save the file or not. This is pretty annoying and seems redundant. Deleting a file already comes with it's own confirmation dialog.\r\n\r\nIf this is an issue for atom/tree-view let me know and I'll re-post there."
   },
   "comment": {
    "id": 217634315,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-07T13:15:26Z",
    "updated_at": "2016-05-07T13:15:26Z",
    "body": "I don't think that this is an ideal change as implemented. The orphan buffer should remain so that the users can save it elsewhere if needed."
   }
  },
  "public": true,
  "created_at": "2016-05-07T13:15:26Z",
  "org": {
   "id": 1089146,
   "login": "atom",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/atom",
   "avatar_url": "https://avatars.githubusercontent.com/u/1089146?"
  }
 },
 {
  "id": "3984057535",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 153560072,
    "number": 29,
    "title": "Implement and test copy-on-write",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "performance"
    ],
    "state": "open",
    "assignee": {
     "login": "lemire",
     "id": 391987,
     "avatar_url": "https://avatars.githubusercontent.com/u/391987?v=3",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lemire",
     "html_url": "https://github.com/lemire",
     "followers_url": "https://api.github.com/users/lemire/followers",
     "following_url": "https://api.github.com/users/lemire/following{/other_user}",
     "gists_url": "https://api.github.com/users/lemire/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lemire/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lemire/subscriptions",
     "organizations_url": "https://api.github.com/users/lemire/orgs",
     "repos_url": "https://api.github.com/users/lemire/repos",
     "events_url": "https://api.github.com/users/lemire/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lemire/received_events",
     "type": "User",
     "site_admin": false
    },
    "milestone": {
     "url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/3",
     "html_url": "https://github.com/RoaringBitmap/CRoaring/milestones/0.0.2:%20Research%20%22complete%22%20prototype",
     "labels_url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/3/labels",
     "id": 1752618,
     "number": 3,
     "title": "0.0.2: Research \"complete\" prototype",
     "description": "",
     "creator": {
      "login": "lemire",
      "id": 391987,
      "avatar_url": "https://avatars.githubusercontent.com/u/391987?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemire",
      "html_url": "https://github.com/lemire",
      "followers_url": "https://api.github.com/users/lemire/followers",
      "following_url": "https://api.github.com/users/lemire/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemire/subscriptions",
      "organizations_url": "https://api.github.com/users/lemire/orgs",
      "repos_url": "https://api.github.com/users/lemire/repos",
      "events_url": "https://api.github.com/users/lemire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemire/received_events",
      "type": "User",
      "site_admin": false
     },
     "open_issues": 1,
     "closed_issues": 0,
     "state": "open",
     "created_at": "2016-05-07T00:00:45Z",
     "updated_at": "2016-05-07T00:00:58Z",
     "due_on": "2016-05-28T04:00:00Z",
     "closed_at": null
    },
    "created_at": "2016-05-06T23:59:23Z",
    "updated_at": "2016-05-07T00:02:28Z",
    "body": "In progress at https://github.com/RoaringBitmap/CRoaring/tree/performance/cow"
   },
   "comment": {
    "id": 217590367,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-07T00:02:28Z",
    "updated_at": "2016-05-07T00:02:28Z",
    "body": "c.c. @owenkaser "
   }
  },
  "public": true,
  "created_at": "2016-05-07T00:02:28Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3984051136",
  "type": "IssuesEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "opened",
   "issue": {
    "id": 153560072,
    "number": 29,
    "title": "Implement and test copy-on-write",
    "labels": [
     "performance"
    ],
    "state": "open",
    "created_at": "2016-05-06T23:59:23Z",
    "updated_at": "2016-05-06T23:59:23Z",
    "body": "In progress at https://github.com/RoaringBitmap/CRoaring/tree/performance/cow"
   }
  },
  "public": true,
  "created_at": "2016-05-06T23:59:24Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3984047620",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 139941425,
    "number": 10,
    "title": "Implement benchmark against alternatives",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "help wanted",
     "performance"
    ],
    "state": "closed",
    "assignee": {
     "login": "lemire",
     "id": 391987,
     "avatar_url": "https://avatars.githubusercontent.com/u/391987?v=3",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lemire",
     "html_url": "https://github.com/lemire",
     "followers_url": "https://api.github.com/users/lemire/followers",
     "following_url": "https://api.github.com/users/lemire/following{/other_user}",
     "gists_url": "https://api.github.com/users/lemire/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lemire/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lemire/subscriptions",
     "organizations_url": "https://api.github.com/users/lemire/orgs",
     "repos_url": "https://api.github.com/users/lemire/repos",
     "events_url": "https://api.github.com/users/lemire/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lemire/received_events",
     "type": "User",
     "site_admin": false
    },
    "milestone": {
     "url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/1",
     "html_url": "https://github.com/RoaringBitmap/CRoaring/milestones/0.0.1:%20research%20prototype%20complete",
     "labels_url": "https://api.github.com/repos/RoaringBitmap/CRoaring/milestones/1/labels",
     "id": 1666663,
     "number": 1,
     "title": "0.0.1: research prototype complete",
     "description": "From this point forward, benchmarking could start to assess performance.",
     "creator": {
      "login": "lemire",
      "id": 391987,
      "avatar_url": "https://avatars.githubusercontent.com/u/391987?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemire",
      "html_url": "https://github.com/lemire",
      "followers_url": "https://api.github.com/users/lemire/followers",
      "following_url": "https://api.github.com/users/lemire/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemire/subscriptions",
      "organizations_url": "https://api.github.com/users/lemire/orgs",
      "repos_url": "https://api.github.com/users/lemire/repos",
      "events_url": "https://api.github.com/users/lemire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemire/received_events",
      "type": "User",
      "site_admin": false
     },
     "open_issues": 0,
     "closed_issues": 2,
     "state": "closed",
     "created_at": "2016-03-26T02:45:06Z",
     "updated_at": "2016-05-06T23:57:37Z",
     "due_on": "2016-04-09T04:00:00Z",
     "closed_at": "2016-04-27T19:59:51Z"
    },
    "comments": 1,
    "created_at": "2016-03-10T16:29:19Z",
    "updated_at": "2016-05-06T23:57:37Z",
    "closed_at": "2016-05-06T23:57:37Z",
    "body": "What we badly need is some kind of benchmarking framework... We have various \"competitors\". The easiest one to compare against would be EWAH... it is used by Git and we have nice, well tested C code...\r\n\r\nhttps://github.com/git/git/blob/master/ewah/ewah_bitmap.c#L247\r\n\r\nOther competitors include bitmagic and wah (from fastbit). It is going to get a bit more complicated because fastbit and bitmagic use C++ code... so we'll need to either switch to C++ for the benchmarks, or wrap the C++ libraries in C function. I think it makes sense to use C++ code for the benchmarks... \r\n\r\nIt could build on \r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/benchmarks/run_container_benchmark.c"
   },
   "comment": {
    "id": 217589897,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-06T23:57:37Z",
    "updated_at": "2016-05-06T23:57:37Z",
    "body": "Done https://github.com/RoaringBitmap/CBitmapCompetition"
   }
  },
  "public": true,
  "created_at": "2016-05-06T23:57:39Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3984047622",
  "type": "IssuesEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "closed",
   "issue": {
    "id": 139941425,
    "number": 10,
    "title": "Implement benchmark against alternatives",
    "labels": [
     "help wanted",
     "performance"
    ],
    "state": "closed",
    "comments": 1,
    "created_at": "2016-03-10T16:29:19Z",
    "updated_at": "2016-05-06T23:57:37Z",
    "closed_at": "2016-05-06T23:57:37Z",
    "body": "What we badly need is some kind of benchmarking framework... We have various \"competitors\". The easiest one to compare against would be EWAH... it is used by Git and we have nice, well tested C code...\r\n\r\nhttps://github.com/git/git/blob/master/ewah/ewah_bitmap.c#L247\r\n\r\nOther competitors include bitmagic and wah (from fastbit). It is going to get a bit more complicated because fastbit and bitmagic use C++ code... so we'll need to either switch to C++ for the benchmarks, or wrap the C++ libraries in C function. I think it makes sense to use C++ code for the benchmarks... \r\n\r\nIt could build on \r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/benchmarks/run_container_benchmark.c"
   }
  },
  "public": true,
  "created_at": "2016-05-06T23:57:39Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3984024461",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1100784841,
   "ref": "refs/heads/performance/cow",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "645417cc2c8cb5636e350364d0ea822a961a0e9f": "This is a mess. Please don't look."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T23:46:21Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3983137722",
  "type": "CreateEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "ref": "performance/cow",
   "ref_type": "branch",
   "master_branch": "master",
   "description": "Roaring bitmaps in C (Currently being developed)",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-06T19:24:14Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3983135803",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1100491567,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "353fda2b5f8dcf99a98729551490367176fafc81": "Can now create roaring arrays with a given capacity"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T19:23:46Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3983060728",
  "type": "CreateEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "ref": "v0.2.3",
   "ref_type": "tag",
   "master_branch": "master",
   "description": "Roaring bitmaps in Go (golang)",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-06T19:05:08Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3983057493",
  "type": "IssuesEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "action": "closed",
   "issue": {
    "id": 153509955,
    "number": 59,
    "title": "Fix Copy-on-Write implementation ",
    "labels": [],
    "state": "closed",
    "comments": 1,
    "created_at": "2016-05-06T18:23:34Z",
    "updated_at": "2016-05-06T19:04:20Z",
    "closed_at": "2016-05-06T19:04:20Z",
    "body": "The current copy-on-write implementation is not effective. It should be re-engineered."
   }
  },
  "public": true,
  "created_at": "2016-05-06T19:04:20Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3983057491",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 153509955,
    "number": 59,
    "title": "Fix Copy-on-Write implementation ",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "state": "closed",
    "comments": 1,
    "created_at": "2016-05-06T18:23:34Z",
    "updated_at": "2016-05-06T19:04:20Z",
    "closed_at": "2016-05-06T19:04:20Z",
    "body": "The current copy-on-write implementation is not effective. It should be re-engineered."
   },
   "comment": {
    "id": 217531383,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-06T19:04:20Z",
    "updated_at": "2016-05-06T19:04:20Z",
    "body": "Fixed : https://github.com/RoaringBitmap/roaring/commit/3751c264e57277e7a1a7e7c25eec398753ddc3e9"
   }
  },
  "public": true,
  "created_at": "2016-05-06T19:04:20Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3983051304",
  "type": "PushEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "push_id": 1100464531,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "3751c264e57277e7a1a7e7c25eec398753ddc3e9": "Fixed COW implementation."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T19:03:01Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3982882650",
  "type": "IssuesEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "action": "opened",
   "issue": {
    "id": 153509955,
    "number": 59,
    "title": "Fix Copy-on-Write implementation ",
    "labels": [],
    "state": "open",
    "created_at": "2016-05-06T18:23:34Z",
    "updated_at": "2016-05-06T18:23:34Z",
    "body": "The current copy-on-write implementation is not effective. It should be re-engineered."
   }
  },
  "public": true,
  "created_at": "2016-05-06T18:23:34Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3981748293",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1100026211,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "43383cceadc59ddf1487a799957d80a3111be198": "The cardinality of a run container can now be computed using AVX."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T14:06:37Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979930143",
  "type": "IssuesEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "closed",
   "issue": {
    "id": 150591322,
    "number": 107,
    "title": "Evaluate/test core optimizations introduced in CRoaring",
    "labels": [
     "benchmarking",
     "help wanted",
     "performance"
    ],
    "state": "closed",
    "comments": 5,
    "created_at": "2016-04-23T19:58:35Z",
    "updated_at": "2016-05-06T03:24:19Z",
    "closed_at": "2016-05-06T03:24:18Z",
    "body": "There is a companion project called CRoaring (https://github.com/RoaringBitmap/CRoaring) which aims to produce faster lower-level Roaring bitmaps.\r\n\r\nAs part of this work, two optimizations have been found (tenatively) to have some benefits.\r\n\r\n\r\nFirst optimization\r\n----------------------\r\n\r\nCurrently, as part of the in-place lazy union, when we encounter two array containers, we proceed as in the non-lazy union. That is, we generate a bitset container if the cardinality is above 4096, and otherwise, we generate an array container.\r\n\r\nhttps://github.com/RoaringBitmap/RoaringBitmap/blob/master/src/main/java/org/roaringbitmap/Container.java#L554\r\n\r\nIn the CRoaring code, we now have a lazy arrayxarray union which always generate a bitset if the total cardinality of the inputs exceeds a threshold (1024).\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/src/containers/mixed_union.c#L181-L199\r\n\r\nTo compensate for this optimization, when calling \"repairAfterLazy\" on a bitset container, we have to convert the bitset container to an array container if the cardinality is insufficient. The code is very simple...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/containers.h#L73-L79\r\n\r\nIn some instances (as in Census1881), this optimization *divided* the running time by almost 4... because we replaced expensive array unions with relatively cheap array-bitset unions.\r\n\r\nFirst optimization (part 2)\r\n----------------------------------\r\n\r\nEven more aggressively, we can proactively convert the union of two array containers to a bitmap in lazy mode as soon as they exceed a small threshold (1024):\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/7542918a7c07b2cfdb241b24619a2a078f1760db/src/containers/mixed_union.c#L185\r\n\r\nSecond optimization\r\n---------------------------\r\n\r\nWhen checking whether a run container is more economical under \"run optimize\" we always convert even if the run container only saves us a single byte. Instead, we can choose to only convert to a run container if it cuts storage by half...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/perfparameters.h#L16\r\n\r\nIn theory, this could double the storage requirements, but in practice it brings about a much more modest storage increase, while improving significantly the performance in some cases. So it is a different and maybe more interesting trade-off.\r\n\r\nOverall\r\n--------------\r\n\r\n\r\n\r\nAnyhow, these are just experimental ideas. They are both very easy to implement, and not difficult to test.\r\n\r\nc.c. @gssiyankai @owenkaser "
   }
  },
  "public": true,
  "created_at": "2016-05-06T03:24:19Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979930139",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 150591322,
    "number": 107,
    "title": "Evaluate/test core optimizations introduced in CRoaring",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "benchmarking",
     "help wanted",
     "performance"
    ],
    "state": "closed",
    "comments": 4,
    "created_at": "2016-04-23T19:58:35Z",
    "updated_at": "2016-05-06T03:24:18Z",
    "closed_at": "2016-05-06T03:24:18Z",
    "body": "There is a companion project called CRoaring (https://github.com/RoaringBitmap/CRoaring) which aims to produce faster lower-level Roaring bitmaps.\r\n\r\nAs part of this work, two optimizations have been found (tenatively) to have some benefits.\r\n\r\n\r\nFirst optimization\r\n----------------------\r\n\r\nCurrently, as part of the in-place lazy union, when we encounter two array containers, we proceed as in the non-lazy union. That is, we generate a bitset container if the cardinality is above 4096, and otherwise, we generate an array container.\r\n\r\nhttps://github.com/RoaringBitmap/RoaringBitmap/blob/master/src/main/java/org/roaringbitmap/Container.java#L554\r\n\r\nIn the CRoaring code, we now have a lazy arrayxarray union which always generate a bitset if the total cardinality of the inputs exceeds a threshold (1024).\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/src/containers/mixed_union.c#L181-L199\r\n\r\nTo compensate for this optimization, when calling \"repairAfterLazy\" on a bitset container, we have to convert the bitset container to an array container if the cardinality is insufficient. The code is very simple...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/containers.h#L73-L79\r\n\r\nIn some instances (as in Census1881), this optimization *divided* the running time by almost 4... because we replaced expensive array unions with relatively cheap array-bitset unions.\r\n\r\nFirst optimization (part 2)\r\n----------------------------------\r\n\r\nEven more aggressively, we can proactively convert the union of two array containers to a bitmap in lazy mode as soon as they exceed a small threshold (1024):\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/7542918a7c07b2cfdb241b24619a2a078f1760db/src/containers/mixed_union.c#L185\r\n\r\nSecond optimization\r\n---------------------------\r\n\r\nWhen checking whether a run container is more economical under \"run optimize\" we always convert even if the run container only saves us a single byte. Instead, we can choose to only convert to a run container if it cuts storage by half...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/perfparameters.h#L16\r\n\r\nIn theory, this could double the storage requirements, but in practice it brings about a much more modest storage increase, while improving significantly the performance in some cases. So it is a different and maybe more interesting trade-off.\r\n\r\nOverall\r\n--------------\r\n\r\n\r\n\r\nAnyhow, these are just experimental ideas. They are both very easy to implement, and not difficult to test.\r\n\r\nc.c. @gssiyankai @owenkaser "
   },
   "comment": {
    "id": 217339534,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-06T03:24:18Z",
    "updated_at": "2016-05-06T03:24:18Z",
    "body": "First optimization included in release RoaringBitmap-0.6.17.\r\n\r\nSecond optimization reverted (reverted also in CRoaring)."
   }
  },
  "public": true,
  "created_at": "2016-05-06T03:24:19Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979912375",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1099348772,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "28b2cbdfaa423709f95f62721132f5967e72a8d6": "[maven-release-plugin] prepare for next development iteration"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T03:14:55Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979912169",
  "type": "CreateEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "ref": "RoaringBitmap-0.6.17",
   "ref_type": "tag",
   "master_branch": "master",
   "description": "A better compressed bitset in Java",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-06T03:14:50Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979912003",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1099348631,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "f4a9d09345523028c1ddd42548143096080355d3": "[maven-release-plugin] prepare release RoaringBitmap-0.6.17"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T03:14:44Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979900913",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1099344264,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "d42b5992bc901cda4748ad6823280662af5352d0": "Implementing optimization 1 from https://github.com/RoaringBitmap/RoaringBitmap/issues/107\n\nWill soon test it out.",
      "1075da9090cec78b10127cff5a509c64187f1626": "Implementing optimization 1, part 2",
      "c5db5f743938a3b3c3e8bbcc853c3bf526c40fcc": "Second part of optimization https://github.com/RoaringBitmap/RoaringBitmap/issues/107",
      "4f7315b8877f25d24318521f67f5a236997a7875": "Revert \"Second part of optimization https://github.com/RoaringBitmap/RoaringBitmap/issues/107\"\n\nThis reverts commit c5db5f743938a3b3c3e8bbcc853c3bf526c40fcc.",
      "77f7de65b6b2a58bb764b978d3c266fcbaad29f8": "Porting optimization 1 to buffer",
      "78ad3a1c11e374e471e4fc666257569269447412": "Preparing new release"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T03:08:57Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979898421",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1099343340,
   "ref": "refs/heads/performance/issue107",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "77f7de65b6b2a58bb764b978d3c266fcbaad29f8": "Porting optimization 1 to buffer"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T03:07:38Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979876260",
  "type": "CreateEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "ref": "v0.2.2",
   "ref_type": "tag",
   "master_branch": "master",
   "description": "Roaring bitmaps in Go (golang)",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-06T02:56:11Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979874437",
  "type": "PushEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "push_id": 1099334024,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "91117e6f470445c6b65faad671b3f68827301e62": "We don't need this file"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T02:55:11Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979860142",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1099328396,
   "ref": "refs/heads/performance/issue107",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "4f7315b8877f25d24318521f67f5a236997a7875": "Revert \"Second part of optimization https://github.com/RoaringBitmap/RoaringBitmap/issues/107\"\n\nThis reverts commit c5db5f743938a3b3c3e8bbcc853c3bf526c40fcc."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T02:47:25Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979858289",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1099327744,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "512c689dd1c5d0ed8b5f5efdd94649df71df6733": "Updating CRoaring"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T02:46:28Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979844232",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1099322771,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "9e3ff2f12a4c938eb19942c6b292807e933c0ca8": "Disabling one optimization"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T02:39:27Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979820635",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 150591322,
    "number": 107,
    "title": "Evaluate/test core optimizations introduced in CRoaring",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "benchmarking",
     "help wanted",
     "performance"
    ],
    "state": "open",
    "comments": 4,
    "created_at": "2016-04-23T19:58:35Z",
    "updated_at": "2016-05-06T02:28:01Z",
    "body": "There is a companion project called CRoaring (https://github.com/RoaringBitmap/CRoaring) which aims to produce faster lower-level Roaring bitmaps.\r\n\r\nAs part of this work, two optimizations have been found (tenatively) to have some benefits.\r\n\r\n\r\nFirst optimization\r\n----------------------\r\n\r\nCurrently, as part of the in-place lazy union, when we encounter two array containers, we proceed as in the non-lazy union. That is, we generate a bitset container if the cardinality is above 4096, and otherwise, we generate an array container.\r\n\r\nhttps://github.com/RoaringBitmap/RoaringBitmap/blob/master/src/main/java/org/roaringbitmap/Container.java#L554\r\n\r\nIn the CRoaring code, we now have a lazy arrayxarray union which always generate a bitset if the total cardinality of the inputs exceeds a threshold (1024).\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/src/containers/mixed_union.c#L181-L199\r\n\r\nTo compensate for this optimization, when calling \"repairAfterLazy\" on a bitset container, we have to convert the bitset container to an array container if the cardinality is insufficient. The code is very simple...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/containers.h#L73-L79\r\n\r\nIn some instances (as in Census1881), this optimization *divided* the running time by almost 4... because we replaced expensive array unions with relatively cheap array-bitset unions.\r\n\r\nFirst optimization (part 2)\r\n----------------------------------\r\n\r\nEven more aggressively, we can proactively convert the union of two array containers to a bitmap in lazy mode as soon as they exceed a small threshold (1024):\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/7542918a7c07b2cfdb241b24619a2a078f1760db/src/containers/mixed_union.c#L185\r\n\r\nSecond optimization\r\n---------------------------\r\n\r\nWhen checking whether a run container is more economical under \"run optimize\" we always convert even if the run container only saves us a single byte. Instead, we can choose to only convert to a run container if it cuts storage by half...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/perfparameters.h#L16\r\n\r\nIn theory, this could double the storage requirements, but in practice it brings about a much more modest storage increase, while improving significantly the performance in some cases. So it is a different and maybe more interesting trade-off.\r\n\r\nOverall\r\n--------------\r\n\r\n\r\n\r\nAnyhow, these are just experimental ideas. They are both very easy to implement, and not difficult to test.\r\n\r\nc.c. @gssiyankai @owenkaser "
   },
   "comment": {
    "id": 217333349,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-06T02:28:01Z",
    "updated_at": "2016-05-06T02:28:01Z",
    "body": "The second optimization seems to bring no benefit...\r\n\r\n```\r\n$ cat  wideornaivelog.txt |grep \"false  roaring_with_run\"\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           census-income        false  roaring_with_run  avgt    5     687.793 ±     3.371  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive              census1881        false  roaring_with_run  avgt    5    2229.742 ±     6.619  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_008        false  roaring_with_run  avgt    5    2555.814 ±     9.357  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_003        false  roaring_with_run  avgt    5    1736.942 ±    44.636  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_033        false  roaring_with_run  avgt    5     765.297 ±     4.222  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive            uscensus2000        false  roaring_with_run  avgt    5     250.107 ±     0.655  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive         weather_sept_85        false  roaring_with_run  avgt    5    2868.225 ±    39.776  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive      wikileaks-noquotes        false  roaring_with_run  avgt    5    9678.845 ±    11.653  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive       census-income_srt        false  roaring_with_run  avgt    5      58.701 ±     1.147  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive          census1881_srt        false  roaring_with_run  avgt    5    4793.926 ±     5.604  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive     weather_sept_85_srt        false  roaring_with_run  avgt    5     788.940 ±     0.329  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive  wikileaks-noquotes_srt        false  roaring_with_run  avgt    5    1887.183 ±     4.304  us/op\r\n```"
   }
  },
  "public": true,
  "created_at": "2016-05-06T02:28:01Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979783802",
  "type": "PushEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "push_id": 1099301568,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "b747b1bc3116266fd63238c4eb46088ac7408b13": "Completed the optimization (part 1)"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T02:10:15Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979752784",
  "type": "PushEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "push_id": 1099291126,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "04b74361f7b4fe5a7e9b01baf80d82e5111af7f6": "go fmt"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T01:55:23Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979752200",
  "type": "PushEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "push_id": 1099290912,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "2ea8a7041014e05a9ce4afedf8596f61dada3325": "Second part of first optimization from https://github.com/RoaringBitmap/RoaringBitmap/issues/107"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T01:55:08Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979747832",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1099289387,
   "ref": "refs/heads/performance/issue107",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "c5db5f743938a3b3c3e8bbcc853c3bf526c40fcc": "Second part of optimization https://github.com/RoaringBitmap/RoaringBitmap/issues/107"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T01:53:00Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979737005",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 150591322,
    "number": 107,
    "title": "Evaluate/test core optimizations introduced in CRoaring",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "benchmarking",
     "help wanted",
     "performance"
    ],
    "state": "open",
    "comments": 3,
    "created_at": "2016-04-23T19:58:35Z",
    "updated_at": "2016-05-06T01:47:44Z",
    "body": "There is a companion project called CRoaring (https://github.com/RoaringBitmap/CRoaring) which aims to produce faster lower-level Roaring bitmaps.\r\n\r\nAs part of this work, two optimizations have been found (tenatively) to have some benefits.\r\n\r\n\r\nFirst optimization\r\n----------------------\r\n\r\nCurrently, as part of the in-place lazy union, when we encounter two array containers, we proceed as in the non-lazy union. That is, we generate a bitset container if the cardinality is above 4096, and otherwise, we generate an array container.\r\n\r\nhttps://github.com/RoaringBitmap/RoaringBitmap/blob/master/src/main/java/org/roaringbitmap/Container.java#L554\r\n\r\nIn the CRoaring code, we now have a lazy arrayxarray union which always generate a bitset if the total cardinality of the inputs exceeds a threshold (1024).\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/src/containers/mixed_union.c#L181-L199\r\n\r\nTo compensate for this optimization, when calling \"repairAfterLazy\" on a bitset container, we have to convert the bitset container to an array container if the cardinality is insufficient. The code is very simple...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/containers.h#L73-L79\r\n\r\nIn some instances (as in Census1881), this optimization *divided* the running time by almost 4... because we replaced expensive array unions with relatively cheap array-bitset unions.\r\n\r\nFirst optimization (part 2)\r\n----------------------------------\r\n\r\nEven more aggressively, we can proactively convert the union of two array containers to a bitmap in lazy mode as soon as they exceed a small threshold (1024):\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/7542918a7c07b2cfdb241b24619a2a078f1760db/src/containers/mixed_union.c#L185\r\n\r\nSecond optimization\r\n---------------------------\r\n\r\nWhen checking whether a run container is more economical under \"run optimize\" we always convert even if the run container only saves us a single byte. Instead, we can choose to only convert to a run container if it cuts storage by half...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/perfparameters.h#L16\r\n\r\nIn theory, this could double the storage requirements, but in practice it brings about a much more modest storage increase, while improving significantly the performance in some cases. So it is a different and maybe more interesting trade-off.\r\n\r\nOverall\r\n--------------\r\n\r\n\r\n\r\nAnyhow, these are just experimental ideas. They are both very easy to implement, and not difficult to test.\r\n\r\nc.c. @gssiyankai @owenkaser "
   },
   "comment": {
    "id": 217328688,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-06T01:47:44Z",
    "updated_at": "2016-05-06T01:47:44Z",
    "body": "The second part of the first optimization seems to help quite a bit too in some cases...\r\n\r\n```\r\n$  cat  wideornaivelog.txt |grep \"false           roaring\"\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           census-income        false           roaring  avgt    5     640.938 ±    4.585  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive              census1881        false           roaring  avgt    5    1309.224 ±    1.473  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_008        false           roaring  avgt    5    2318.794 ±   47.204  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_003        false           roaring  avgt    5    4892.582 ±   87.293  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_033        false           roaring  avgt    5    1879.071 ±   29.928  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive            uscensus2000        false           roaring  avgt    5     243.088 ±    0.687  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive         weather_sept_85        false           roaring  avgt    5    2890.097 ±   49.303  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive      wikileaks-noquotes        false           roaring  avgt    5     653.058 ±    1.279  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive       census-income_srt        false           roaring  avgt    5     654.654 ±    2.912  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive          census1881_srt        false           roaring  avgt    5    1557.849 ±    7.022  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive     weather_sept_85_srt        false           roaring  avgt    5    1592.689 ±   80.414  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive  wikileaks-noquotes_srt        false           roaring  avgt    5     652.217 ±    5.539  us/op\r\n```\r\n\r\nand \r\n\r\n```\r\n$  cat  wideornaivelog.txt |grep \"false  roaring_with_run\"\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           census-income        false  roaring_with_run  avgt    5     686.188 ±    3.091  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive              census1881        false  roaring_with_run  avgt    5    2233.381 ±    6.926  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_008        false  roaring_with_run  avgt    5    2549.240 ±    1.403  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_003        false  roaring_with_run  avgt    5    1787.312 ±   19.681  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_033        false  roaring_with_run  avgt    5     760.223 ±    5.209  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive            uscensus2000        false  roaring_with_run  avgt    5     245.437 ±    0.637  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive         weather_sept_85        false  roaring_with_run  avgt    5    2866.310 ±   52.670  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive      wikileaks-noquotes        false  roaring_with_run  avgt    5    9894.356 ±   15.015  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive       census-income_srt        false  roaring_with_run  avgt    5      57.803 ±    0.952  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive          census1881_srt        false  roaring_with_run  avgt    5    4995.352 ±   19.627  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive     weather_sept_85_srt        false  roaring_with_run  avgt    5     793.142 ±    0.925  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive  wikileaks-noquotes_srt        false  roaring_with_run  avgt    5    1920.696 ±    5.835  us/op\r\n```\r\n\r\nThe code is nearly trivial : \r\nhttps://github.com/RoaringBitmap/RoaringBitmap/commit/1075da9090cec78b10127cff5a509c64187f1626"
   }
  },
  "public": true,
  "created_at": "2016-05-06T01:47:44Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979584273",
  "type": "PushEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "push_id": 1099235127,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "b28c23811f8fa3e2b0afcb0231fcbbbf88c71721": "Applying optimize 1, part 1:\nhttps://github.com/RoaringBitmap/RoaringBitmap/issues/107"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-06T00:37:18Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979512050",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 150591322,
    "number": 107,
    "title": "Evaluate/test core optimizations introduced in CRoaring",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "benchmarking",
     "help wanted",
     "performance"
    ],
    "state": "open",
    "comments": 1,
    "created_at": "2016-04-23T19:58:35Z",
    "updated_at": "2016-05-06T00:08:14Z",
    "body": "There is a companion project called CRoaring (https://github.com/RoaringBitmap/CRoaring) which aims to produce faster lower-level Roaring bitmaps.\r\n\r\nAs part of this work, two optimizations have been found (tenatively) to have some benefits.\r\n\r\n\r\nFirst optimization\r\n----------------------\r\n\r\nCurrently, as part of the in-place lazy union, when we encounter two array containers, we proceed as in the non-lazy union. That is, we generate a bitset container if the cardinality is above 4096, and otherwise, we generate an array container.\r\n\r\nhttps://github.com/RoaringBitmap/RoaringBitmap/blob/master/src/main/java/org/roaringbitmap/Container.java#L554\r\n\r\nIn the CRoaring code, we now have a lazy arrayxarray union which always generate a bitset if the total cardinality of the inputs exceeds a threshold (1024).\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/src/containers/mixed_union.c#L181-L199\r\n\r\nTo compensate for this optimization, when calling \"repairAfterLazy\" on a bitset container, we have to convert the bitset container to an array container if the cardinality is insufficient. The code is very simple...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/containers.h#L73-L79\r\n\r\nIn some instances (as in Census1881), this optimization *divided* the running time by almost 4... because we replaced expensive array unions with relatively cheap array-bitset unions.\r\n\r\nFirst optimization (part 2)\r\n----------------------------------\r\n\r\nEven more aggressively, we can proactively convert the union of two array containers to a bitmap in lazy mode as soon as they exceed a small threshold (1024):\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/7542918a7c07b2cfdb241b24619a2a078f1760db/src/containers/mixed_union.c#L185\r\n\r\nSecond optimization\r\n---------------------------\r\n\r\nWhen checking whether a run container is more economical under \"run optimize\" we always convert even if the run container only saves us a single byte. Instead, we can choose to only convert to a run container if it cuts storage by half...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/perfparameters.h#L16\r\n\r\nIn theory, this could double the storage requirements, but in practice it brings about a much more modest storage increase, while improving significantly the performance in some cases. So it is a different and maybe more interesting trade-off.\r\n\r\nOverall\r\n--------------\r\n\r\n\r\n\r\nAnyhow, these are just experimental ideas. They are both very easy to implement, and not difficult to test.\r\n\r\nc.c. @gssiyankai @owenkaser "
   },
   "comment": {
    "id": 217315004,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-06T00:08:14Z",
    "updated_at": "2016-05-06T00:08:14Z",
    "body": "Here is the implementation of part 1:\r\n\r\nhttps://github.com/RoaringBitmap/RoaringBitmap/commit/d42b5992bc901cda4748ad6823280662af5352d0"
   }
  },
  "public": true,
  "created_at": "2016-05-06T00:08:14Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979508132",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 150591322,
    "number": 107,
    "title": "Evaluate/test core optimizations introduced in CRoaring",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "benchmarking",
     "help wanted",
     "performance"
    ],
    "state": "open",
    "created_at": "2016-04-23T19:58:35Z",
    "updated_at": "2016-05-06T00:06:46Z",
    "body": "There is a companion project called CRoaring (https://github.com/RoaringBitmap/CRoaring) which aims to produce faster lower-level Roaring bitmaps.\r\n\r\nAs part of this work, two optimizations have been found (tenatively) to have some benefits.\r\n\r\n\r\nFirst optimization\r\n----------------------\r\n\r\nCurrently, as part of the in-place lazy union, when we encounter two array containers, we proceed as in the non-lazy union. That is, we generate a bitset container if the cardinality is above 4096, and otherwise, we generate an array container.\r\n\r\nhttps://github.com/RoaringBitmap/RoaringBitmap/blob/master/src/main/java/org/roaringbitmap/Container.java#L554\r\n\r\nIn the CRoaring code, we now have a lazy arrayxarray union which always generate a bitset if the total cardinality of the inputs exceeds a threshold (1024).\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/src/containers/mixed_union.c#L181-L199\r\n\r\nTo compensate for this optimization, when calling \"repairAfterLazy\" on a bitset container, we have to convert the bitset container to an array container if the cardinality is insufficient. The code is very simple...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/containers.h#L73-L79\r\n\r\nIn some instances (as in Census1881), this optimization *divided* the running time by almost 4... because we replaced expensive array unions with relatively cheap array-bitset unions.\r\n\r\nFirst optimization (part 2)\r\n----------------------------------\r\n\r\nEven more aggressively, we can proactively convert the union of two array containers to a bitmap in lazy mode as soon as they exceed a small threshold (1024):\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/7542918a7c07b2cfdb241b24619a2a078f1760db/src/containers/mixed_union.c#L185\r\n\r\nSecond optimization\r\n---------------------------\r\n\r\nWhen checking whether a run container is more economical under \"run optimize\" we always convert even if the run container only saves us a single byte. Instead, we can choose to only convert to a run container if it cuts storage by half...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/perfparameters.h#L16\r\n\r\nIn theory, this could double the storage requirements, but in practice it brings about a much more modest storage increase, while improving significantly the performance in some cases. So it is a different and maybe more interesting trade-off.\r\n\r\nOverall\r\n--------------\r\n\r\n\r\n\r\nAnyhow, these are just experimental ideas. They are both very easy to implement, and not difficult to test.\r\n\r\nc.c. @gssiyankai @owenkaser "
   },
   "comment": {
    "id": 217314821,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-05-06T00:06:46Z",
    "updated_at": "2016-05-06T00:06:46Z",
    "body": "I have implemented the first part of the first optimization.\r\n\r\nLet us first consider the case without run optimization.\r\n\r\nAs it did with CRoaring, it is proving to have a hugely beneficial effect in some cases (as in \"it divides the running time\".\r\n\r\nbefore:\r\n```\r\n$ cat  pristine_5may2016/wideornaivelog.txt |grep \"true           roaring\"\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           census-income        false           roaring  avgt    5    2298.686 ±   60.337  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive              census1881        false           roaring  avgt    5    4339.512 ±   17.455  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_008        false           roaring  avgt    5    2303.149 ±    5.331  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_003        false           roaring  avgt    5    8179.985 ±   52.937  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_033        false           roaring  avgt    5    1940.826 ±   32.804  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive            uscensus2000        false           roaring  avgt    5     242.272 ±    0.976  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive         weather_sept_85        false           roaring  avgt    5    2949.284 ±   23.083  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive      wikileaks-noquotes        false           roaring  avgt    5    3913.263 ±   16.920  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive       census-income_srt        false           roaring  avgt    5    1525.604 ±    4.493  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive          census1881_srt        false           roaring  avgt    5    6286.240 ±   24.274  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive     weather_sept_85_srt        false           roaring  avgt    5    1644.513 ±    3.707  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive  wikileaks-noquotes_srt        false           roaring  avgt    5    4554.803 ±   23.244  us/op\r\n```\r\n\r\n\r\nafter:\r\n```\r\n$ cat  wideornaivelog.txt |grep \"true           roaring\"\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           census-income        false           roaring  avgt    5     724.432 ±     3.301  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive              census1881        false           roaring  avgt    5    4405.000 ±    15.698  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_008        false           roaring  avgt    5    2369.230 ±    18.321  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_003        false           roaring  avgt    5    8166.662 ±    29.913  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_033        false           roaring  avgt    5    1923.320 ±    39.977  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive            uscensus2000        false           roaring  avgt    5     241.903 ±     1.120  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive         weather_sept_85        false           roaring  avgt    5    2947.240 ±    17.818  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive      wikileaks-noquotes        false           roaring  avgt    5    3825.752 ±     9.138  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive       census-income_srt        false           roaring  avgt    5     670.154 ±     3.805  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive          census1881_srt        false           roaring  avgt    5    6242.799 ±    29.656  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive     weather_sept_85_srt        false           roaring  avgt    5    1644.999 ±     5.419  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive  wikileaks-noquotes_srt        false           roaring  avgt    5    4182.568 ±    20.888  us/op\r\n```\r\n\r\n\r\nHowever, once we turn out run optimization, it has a much smaller effect (though, if it does have an effect, it is probably beneficial).\r\n\r\nBefore:\r\n```\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           census-income        false  roaring_with_run  avgt    5     687.974 ±     3.221  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive              census1881        false  roaring_with_run  avgt    5    8894.689 ±    30.280  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_008        false  roaring_with_run  avgt    5    2581.049 ±    10.977  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_003        false  roaring_with_run  avgt    5    1772.724 ±    32.377  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_033        false  roaring_with_run  avgt    5     763.996 ±     5.464  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive            uscensus2000        false  roaring_with_run  avgt    5     243.297 ±     0.659  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive         weather_sept_85        false  roaring_with_run  avgt    5    2925.167 ±    25.377  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive      wikileaks-noquotes        false  roaring_with_run  avgt    5    9627.497 ±    15.178  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive       census-income_srt        false  roaring_with_run  avgt    5      57.825 ±     0.429  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive          census1881_srt        false  roaring_with_run  avgt    5    4898.211 ±     6.997  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive     weather_sept_85_srt        false  roaring_with_run  avgt    5     796.107 ±     0.499  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive  wikileaks-noquotes_srt        false  roaring_with_run  avgt    5    1955.759 ±     5.891  us/op\r\n```\r\n\r\nAfter:\r\n```\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           census-income        false  roaring_with_run  avgt    5     689.739 ±    4.491  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive              census1881        false  roaring_with_run  avgt    5    8864.362 ±   30.672  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_008        false  roaring_with_run  avgt    5    2555.903 ±    6.595  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_003        false  roaring_with_run  avgt    5    1802.401 ±   15.553  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive           dimension_033        false  roaring_with_run  avgt    5     745.722 ±    5.255  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive            uscensus2000        false  roaring_with_run  avgt    5     249.277 ±    0.682  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive         weather_sept_85        false  roaring_with_run  avgt    5    2927.006 ±   15.805  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive      wikileaks-noquotes        false  roaring_with_run  avgt    5    9894.127 ±   41.808  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive       census-income_srt        false  roaring_with_run  avgt    5      57.646 ±    0.792  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive          census1881_srt        false  roaring_with_run  avgt    5    4980.639 ±   25.732  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive     weather_sept_85_srt        false  roaring_with_run  avgt    5     807.045 ±    0.898  us/op\r\nRealDataBenchmarkWideOrNaive.wideOr_naive  wikileaks-noquotes_srt        false  roaring_with_run  avgt    5    1953.400 ±    6.425  us/op\r\n```"
   }
  },
  "public": true,
  "created_at": "2016-05-06T00:06:46Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979433043",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1099184877,
   "ref": "refs/heads/performance/issue107",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "1075da9090cec78b10127cff5a509c64187f1626": "Implementing optimization 1, part 2"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T23:39:09Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3979360218",
  "type": "CreateEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "ref": "performance/issue107",
   "ref_type": "branch",
   "master_branch": "master",
   "description": "A better compressed bitset in Java",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-05T23:13:33Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3978762430",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1098964262,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "b105668d85b6d9c5e0b8d4f86863160a3a3f1987": "Removing useless function"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T20:42:14Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3978758050",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1098962776,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "003f04174a8b341c8be30d39efc2fa1f37ac2311": "Doing something that has some sense for hash sets"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T20:41:17Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3978700761",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1098943828,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "72719b898ca516baa2bb7862dfb0fac103989399": "Good bitmagic heap implementation."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T20:29:16Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3978527894",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1098886809,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "7cfea16a8ccbed0603c35f209d59749aa05a3d2b": "For bitsets we sort"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T19:52:21Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3978478773",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1098870135,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "61f63e66fe81f3b084df7c749ef8a26dada7f609": "The heap algorithm makes little search for hash sets, but whatever..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T19:41:27Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3978098193",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1098741719,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "47f4f7ee85ce83ecc795243f6a79fa73d3106c05": "Implemented heap-based unions for stl::vector and stl::set"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T18:18:58Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3977916063",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1098680916,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "57a52a94a59bb03dca04311149c08ad6057e3098": "Updating Concise"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T17:39:48Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3977904821",
  "type": "PushEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "push_id": 1098677195,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "1f5f5cbe6cab29aa81c0712b4fa64f6c21e7298f": "Simplifying memory allocation"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T17:37:17Z"
 },
 {
  "id": "3977678148",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1098601613,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "0274039711d29149240911a79a99b762aa2a0b0a": "Documenting..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T16:46:42Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3977673104",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1098599900,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "0fb7a8cf1d5c65676cf146984f3e8cd2d1634129": "saving progress so far..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T16:45:36Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3977663104",
  "type": "PushEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "push_id": 1098596552,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "15adde6baead5e0096528de5106c0740c47f7b6e": "Now heap or has unit testing"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T16:43:27Z"
 },
 {
  "id": "3977488377",
  "type": "PushEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "push_id": 1098536711,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "9e2756b9728d7bd5fd95a174e64a4a7e427da93c": "Making API more consistent"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T16:04:22Z"
 },
 {
  "id": "3977453409",
  "type": "PushEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "push_id": 1098524511,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "4af5d2ec6ef66ab98835ef7631a392fa4831a942": "Making method static"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T15:56:57Z"
 },
 {
  "id": "3977393787",
  "type": "PushEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "push_id": 1098503768,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "bea7c5e83d97a00762a1fbf147fe03fe4f1d5b1e": "Adding heap-based logicalor"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T15:44:31Z"
 },
 {
  "id": "3977359041",
  "type": "PushEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "push_id": 1098491593,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "4368313aafa8420f715f781b6c385d67699672e7": "Adding compact function"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T15:37:16Z"
 },
 {
  "id": "3977206814",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1098438212,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "417dded4dc7b063ec8edacfa24f746eae1fc6a35": "Adding trim function"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T15:06:08Z"
 },
 {
  "id": "3977195805",
  "type": "CreateEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "ref": "v0.5.5",
   "ref_type": "tag",
   "master_branch": "master",
   "description": "A compressed bitmap class in C++. ",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-05T15:03:55Z"
 },
 {
  "id": "3975404531",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1097752434,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "04a240ee142f618f8fc506e28114be78f51f3d8c": "Adding Concise"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T04:57:07Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3975395219",
  "type": "PushEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "push_id": 1097748749,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "2c7eeb6b7b29569cd945305d4e94aad1e5e6b947": "No need for max/min"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T04:51:16Z"
 },
 {
  "id": "3975388518",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1097746075,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "b133f2805b541a0ebe21c24b5e13f20a2a306c86": "Actually using a release"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T04:46:54Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3975386936",
  "type": "CreateEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "ref": "v0.5.4",
   "ref_type": "tag",
   "master_branch": "master",
   "description": "A compressed bitmap class in C++. ",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-05T04:45:54Z"
 },
 {
  "id": "3975385854",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1097745064,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "f604f05725d32a75ca7faf2a28d3e593319a2687": "Preparing release"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T04:45:17Z"
 },
 {
  "id": "3975378621",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1097742363,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "7809f7f109c760d34359784eb941fdb2abe907e8": "Revert \"Trying it out with a custom container\"\n\nThis reverts commit d7c909a9736bf84ff297412cdb6ecbb0f03eff76."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T04:40:49Z"
 },
 {
  "id": "3975358105",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1097734730,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "7fb1bc3ed25dd3b7e43528ba1b2fdf40ca209a77": "Removing ugly asserts",
      "d7c909a9736bf84ff297412cdb6ecbb0f03eff76": "Trying it out with a custom container"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T04:29:00Z"
 },
 {
  "id": "3975180002",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1097668002,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "13164f72fcdae7e05e241141eb89febd149133de": "Inserts are slow"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T02:54:34Z"
 },
 {
  "id": "3975122386",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1097645251,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "6bef434a7e8bc7f2543a7134b0f98863c94592ae": "Streamlining addStreamOfDirtyWords",
      "045a176d3b40d8cb4deeff5a2c572f3c128fd1cb": "More streamlining"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T02:24:38Z"
 },
 {
  "id": "3974926233",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1097574685,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "3c10e1b4ede097cc5ff45c8f346cee19385193f9": "Updating EWAHBoolArray."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T00:50:28Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3974918077",
  "type": "CreateEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "ref": "v0.5.3",
   "ref_type": "tag",
   "master_branch": "master",
   "description": "A compressed bitmap class in C++. ",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-05T00:47:06Z"
 },
 {
  "id": "3974915730",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1097571091,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "421e0be1ff274bb5dadda765b71334c7d3818049": "Preparing new release"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T00:46:06Z"
 },
 {
  "id": "3974913282",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1097570253,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "0704c60f039547da3929d3a6bff4417d28563351": "Fixed silly issue with fast_logicalor"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T00:45:08Z"
 },
 {
  "id": "3974853387",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1097549848,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "4320ca50044a3953e5e3984e5087bf0e6612459d": "Pruning length == 0 calls is important for performance."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-05T00:21:38Z"
 },
 {
  "id": "3974649794",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1097482441,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "0c4d3094b9b4e8a398fd0b3365fa1d823b5fc533": "Streamlining discharge method"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T23:11:35Z"
 },
 {
  "id": "3974644903",
  "type": "PushEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "push_id": 1097480819,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "f869651254ecddfc1b16f8461c978aa18e18e1e8": "Streamlining the discharge method (micro-optimization)"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T23:10:09Z"
 },
 {
  "id": "3974153553",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1097320675,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "32dba543a523b0adee365b4d974bb42a07ca16c4": "more fine tuning."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T21:07:31Z"
 },
 {
  "id": "3974128349",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1097313184,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "dafbea940bac4f0e52131d7cb2182a176646df14": "Some streamlining"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T21:02:46Z"
 },
 {
  "id": "3974095667",
  "type": "PushEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "push_id": 1097302465,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "26dbdd0f4121c99e1bd3d0d56c0fe7ab0f0e2bb2": "Introducing discardLiteralWords (micro-optimization)"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T20:56:11Z"
 },
 {
  "id": "3973959951",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1097257502,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "c458faaeb3d23d64da59a27d38b2e15cbba3626a": "Introducing discardLiteralWordsWithReload"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T20:28:02Z"
 },
 {
  "id": "3972783522",
  "type": "PushEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "push_id": 1096859750,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "49192d1292ff6aaa55e68a165811edb12e5aa3c6": "fixing minor issue with shifts"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T16:21:21Z"
 },
 {
  "id": "3972735745",
  "type": "PushEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "push_id": 1096844224,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "dde01d2d7bff91fda391b4161b44258698c21338": "Adding more tests"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T16:12:18Z"
 },
 {
  "id": "3972234515",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1096672793,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "1de69cf27686719d7aa855d68e53c27ad7ba379d": "Fixing small typo"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T14:44:56Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3971997933",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1096587476,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "7c83c5b9c4f1bd735910c2fc7ef4d3e10c14b73a": "Adding another test"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T14:01:53Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3969569240",
  "type": "PushEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "push_id": 1095688953,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "ed3b21663713f30871c694ef63ad7aa540e05214": "Legal warning"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T00:26:14Z"
 },
 {
  "id": "3969558816",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1095685397,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "a3c0ecc529ac860d494429a8ac433cfca5ded232": "The WAH/Concise code still needs debugging"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T00:22:11Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3969520945",
  "type": "PushEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "push_id": 1095672757,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "fc7a475ebfe5dd995872d1029432e6e0608ed4c8": "Adding a space"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T00:08:17Z"
 },
 {
  "id": "3969513828",
  "type": "PushEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "push_id": 1095670376,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "c8ff18e18920b11d22bd768180586b159b140cca": "Initial code"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-04T00:05:42Z"
 },
 {
  "id": "3969450422",
  "type": "CreateEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "ref": "master",
   "ref_type": "branch",
   "master_branch": "master",
   "description": "C++ implementation of Concise and WAH compressed bitsets",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-03T23:44:06Z"
 },
 {
  "id": "3969450415",
  "type": "CreateEvent",
  "repo": {
   "id": 58008705,
   "name": "lemire/Concise"
  },
  "payload": {
   "ref": null,
   "ref_type": "repository",
   "master_branch": "master",
   "description": "C++ implementation of Concise and WAH compressed bitsets",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-03T23:44:06Z"
 },
 {
  "id": "3968395994",
  "type": "PushEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "push_id": 1095297310,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "c81e43a791cdf4edd7d2466766909f581198070f": "Adding new tests"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T19:30:42Z"
 },
 {
  "id": "3968370139",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1095288495,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "bdc1c76058e567255619304a946e97d775798531": "[maven-release-plugin] prepare for next development iteration"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T19:25:06Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3968369461",
  "type": "CreateEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "ref": "RoaringBitmap-0.6.16",
   "ref_type": "tag",
   "master_branch": "master",
   "description": "A better compressed bitset in Java",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-03T19:24:57Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3968369005",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1095288120,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "a9eea82b3fd5c2a4ea89b208f46e230a805b3e0f": "[maven-release-plugin] prepare release RoaringBitmap-0.6.16"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T19:24:50Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3968344011",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1095279648,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "90551756b30841f5f78a2514488aa2a56b401e85": "Fixed bug",
      "a7194bb70fe27ed607087ba04a091019edc62d6e": "big tests should now pass",
      "547d874378b37357d5599f805455d29f6a780cd8": "Preparing new release"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T19:19:18Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3967207361",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1094900325,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "7352bbfd461bc4abb3a1a3db7a9d3b114566b44b": "Saving..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T15:30:12Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3967202189",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1094898518,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "2351cd6c8e7992fd4bf3578be0179017e1c933b4": "Making it more precise"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T15:29:14Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3967195785",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1094896292,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "c6c01ff6a814c33e55df9989979ebd19160ac949": "Better documentation.",
      "758e5793eccc387f11ac7a31b949ddcd0695d07a": "Better documentation"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T15:28:07Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3967138817",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1094876826,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "45fcb44c41d0912d133abb35aa69e3ee840b8b96": "Updating..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T15:17:47Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3967111221",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1094867210,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "5aabbf356977080b8c6defe7db49fbf6b424dc8a": "Better documentation."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T15:12:41Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3964422128",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1093887311,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "01c90b3e8d9ea9e0199c7d6160479b9a5df937c6": "Temporarily disabling big tests"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T00:49:18Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3964417889",
  "type": "PushEvent",
  "repo": {
   "id": 57926295,
   "name": "lemire/cbitset"
  },
  "payload": {
   "push_id": 1093885928,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "a4a4bdf8c5c8312464b68fe06681ea35c1a5c69a": "Adding logo"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T00:47:49Z"
 },
 {
  "id": "3964412540",
  "type": "PushEvent",
  "repo": {
   "id": 57926295,
   "name": "lemire/cbitset"
  },
  "payload": {
   "push_id": 1093884211,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "e440ba7b3a35e2431a8cfe0108d2a7ef1e446b6d": "Adding unit file to all"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T00:45:53Z"
 },
 {
  "id": "3964407444",
  "type": "PushEvent",
  "repo": {
   "id": 57926295,
   "name": "lemire/cbitset"
  },
  "payload": {
   "push_id": 1093882721,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "a8b723776087d7118f4b83695dfa3ea8cd88dda2": "Better documentation..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T00:44:13Z"
 },
 {
  "id": "3964403680",
  "type": "PushEvent",
  "repo": {
   "id": 57926295,
   "name": "lemire/cbitset"
  },
  "payload": {
   "push_id": 1093881602,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "86a95373d4cccafa96c93c2505b70ce5aa0fad87": "Adding tests"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T00:42:47Z"
 },
 {
  "id": "3964356719",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1093866332,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "f12dc82c0ae47ae506f6ae528908fd7c2be64084": "Adding bitset benchmark"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T00:26:20Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3964348969",
  "type": "PushEvent",
  "repo": {
   "id": 57926295,
   "name": "lemire/cbitset"
  },
  "payload": {
   "push_id": 1093863682,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "d3c222b68b50f84b8673a2851d2b8d4bf1b743cf": "Casting..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T00:23:28Z"
 },
 {
  "id": "3964333015",
  "type": "PushEvent",
  "repo": {
   "id": 57926295,
   "name": "lemire/cbitset"
  },
  "payload": {
   "push_id": 1093858310,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "8edf48443a29e492cdfa153e77d4ba39d7aeb67d": "better doc"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T00:17:47Z"
 },
 {
  "id": "3964325710",
  "type": "PushEvent",
  "repo": {
   "id": 57926295,
   "name": "lemire/cbitset"
  },
  "payload": {
   "push_id": 1093855947,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "d0783b2b65fc8cb4d916b9b2a115fb427e2e3966": "Adding a few minor fixes"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-03T00:15:09Z"
 },
 {
  "id": "3964183409",
  "type": "PushEvent",
  "repo": {
   "id": 57926295,
   "name": "lemire/cbitset"
  },
  "payload": {
   "push_id": 1093808790,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "04a98a5ba29882d7df851652a54c6a5580427b1d": "First files"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T23:27:35Z"
 },
 {
  "id": "3964072921",
  "type": "CreateEvent",
  "repo": {
   "id": 57926295,
   "name": "lemire/cbitset"
  },
  "payload": {
   "ref": "master",
   "ref_type": "branch",
   "master_branch": "master",
   "description": "Simple bitset library in C",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-02T22:54:04Z"
 },
 {
  "id": "3964072908",
  "type": "CreateEvent",
  "repo": {
   "id": 57926295,
   "name": "lemire/cbitset"
  },
  "payload": {
   "ref": null,
   "ref_type": "repository",
   "master_branch": "master",
   "description": "Simple bitset library in C",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-05-02T22:54:04Z"
 },
 {
  "id": "3964028795",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1093758234,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "ebb3b7aa686729e2d4bc64b9a4a88cacaf5769c0": "Adding stl hash set and stl vector"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T22:41:22Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3963791683",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1093683159,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "9de1a47831815ea7d7054c3b7c46d921dbc8c913": "Adding STL vector to tests"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T21:42:42Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3963246611",
  "type": "PushEvent",
  "repo": {
   "id": 56382284,
   "name": "CountOnes/hamming_weight"
  },
  "payload": {
   "push_id": 1093502856,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "2fb59a1fc08e113b8467b40bc1e6b34acd3da054": "Adding a version with less unrolling"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T19:45:00Z",
  "org": {
   "id": 18499734,
   "login": "CountOnes",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/CountOnes",
   "avatar_url": "https://avatars.githubusercontent.com/u/18499734?"
  }
 },
 {
  "id": "3963046599",
  "type": "PushEvent",
  "repo": {
   "id": 56382284,
   "name": "CountOnes/hamming_weight"
  },
  "payload": {
   "push_id": 1093436168,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "8d13303d6ff31f5ec7410f8019aeceaac2d1c397": "Adding scalar index source"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T19:00:37Z",
  "org": {
   "id": 18499734,
   "login": "CountOnes",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/CountOnes",
   "avatar_url": "https://avatars.githubusercontent.com/u/18499734?"
  }
 },
 {
  "id": "3963042716",
  "type": "PushEvent",
  "repo": {
   "id": 56382284,
   "name": "CountOnes/hamming_weight"
  },
  "payload": {
   "push_id": 1093434621,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "b937c7252f5ee615ac304c3ef37f0f86324904ce": "adding new header"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T18:59:54Z",
  "org": {
   "id": 18499734,
   "login": "CountOnes",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/CountOnes",
   "avatar_url": "https://avatars.githubusercontent.com/u/18499734?"
  }
 },
 {
  "id": "3963037313",
  "type": "PushEvent",
  "repo": {
   "id": 56382284,
   "name": "CountOnes/hamming_weight"
  },
  "payload": {
   "push_id": 1093432433,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "9b0a3ee77a9d250f6af10b837e82caf8626fc122": "Adding scalar versions",
      "9dc74c9c5809ec9f5b70bbf1f1dcad45a78a09e1": "Adding scalar jaccard index"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T18:58:57Z",
  "org": {
   "id": 18499734,
   "login": "CountOnes",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/CountOnes",
   "avatar_url": "https://avatars.githubusercontent.com/u/18499734?"
  }
 },
 {
  "id": "3962065406",
  "type": "PushEvent",
  "repo": {
   "id": 56268793,
   "name": "lemire/FastDifferentialCoding"
  },
  "payload": {
   "push_id": 1093109305,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "c3f970a377f007568f95fe97ae7d6e1f198e1bce": "updating reference"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T15:27:03Z"
 },
 {
  "id": "3962063236",
  "type": "PushEvent",
  "repo": {
   "id": 34905043,
   "name": "lemire/FrameOfReference"
  },
  "payload": {
   "push_id": 1093108584,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "6ccaf9e97160f9a3b299e23a8ef739e711ef0c71": "Updating reference"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T15:26:36Z"
 },
 {
  "id": "3962059542",
  "type": "PushEvent",
  "repo": {
   "id": 55520750,
   "name": "lemire/LittleIntPacker"
  },
  "payload": {
   "push_id": 1093107367,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "3bd6876b5f1229264cc2f8b11ab99c458e535cf8": "Updating reference"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T15:25:51Z"
 },
 {
  "id": "3962057106",
  "type": "PushEvent",
  "repo": {
   "id": 16556373,
   "name": "lemire/simdcomp"
  },
  "payload": {
   "push_id": 1093106577,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "0dca28668f1fb6d343dc3c62fa7750a00f1d7201": "Updating reference"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T15:25:20Z"
 },
 {
  "id": "3962052538",
  "type": "PushEvent",
  "repo": {
   "id": 4797147,
   "name": "lemire/FastPFor"
  },
  "payload": {
   "push_id": 1093105003,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "d161283796697b1014a78730b5167475d97eb08b": "Updating reference"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T15:24:22Z"
 },
 {
  "id": "3962048785",
  "type": "PushEvent",
  "repo": {
   "id": 15234128,
   "name": "lemire/SIMDCompressionAndIntersection"
  },
  "payload": {
   "push_id": 1093103703,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "1cfff23f79868053d1e5c5efdd9c3bbc4e707d33": "updating reference"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-05-02T15:23:35Z"
 },
 {
  "id": "3956064735",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1090934831,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "35053d7d12bae77299ef6d5cc453c67421f9fc3b": "Update"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-30T00:26:37Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3956062832",
  "type": "CreateEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "ref": "v0.5.2",
   "ref_type": "tag",
   "master_branch": "master",
   "description": "A compressed bitmap class in C++. ",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-04-30T00:25:35Z"
 },
 {
  "id": "3956061370",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1090933582,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "b2344b0c5a7162132b3436f962b86bbf2fdd27d4": "Fixing logicalnot",
      "6333d37f9b5798253981c24653a506b07a5b94f4": "Merge branch 'master' of github.com:lemire/EWAHBoolArray",
      "f5fb0a282ea987a2e5c3623ae8e3b71075a7c66b": "Preparing release"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-30T00:24:50Z"
 },
 {
  "id": "3956057064",
  "type": "PushEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "push_id": 1090932029,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "matt.vilim@gmail.com",
      "name": "Matthew Vilim"
     },
     {
      "9c979de566caa7458fb46c30118ac909fe8c946a": "fix underflow bug during logical negation\n\nUnderflow occurred when literal word count was 0, resulting in later crashes if vector was used as a logic operand during logic operations."
     }
    ],
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "cc7e346c4060b5e00b0c9ad0d7e17e3834430c7f": "Merge pull request #13 from matthewvilim/patch-1\n\nfix underflow bug during logical negation"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-30T00:22:29Z"
 },
 {
  "id": "3956057052",
  "type": "PullRequestEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "action": "closed",
   "number": 13,
   "pull_request": {
    "id": 68447550,
    "state": "closed",
    "title": "fix underflow bug during logical negation",
    "body": "Underflow occurred when literal word count was 0, resulting in later crashes if vector was used as a logic operand during logic operations. Please advise as to valid solution; the proposed solution below works as far as I've tested it. Thanks.",
    "created_at": "2016-04-29T23:30:27Z",
    "updated_at": "2016-04-30T00:22:28Z",
    "closed_at": "2016-04-30T00:22:28Z",
    "merged_at": "2016-04-30T00:22:28Z",
    "merge_commit_sha": "cc7e346c4060b5e00b0c9ad0d7e17e3834430c7f",
    "merged": true,
    "mergeable_state": "unknown",
    "merged_by": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "comments": 1,
    "commits": 1,
    "additions": 2,
    "deletions": 5,
    "changed_files": 1
   }
  },
  "public": true,
  "created_at": "2016-04-30T00:22:28Z"
 },
 {
  "id": "3956056986",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 1042208,
   "name": "lemire/EWAHBoolArray"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 151988061,
    "number": 13,
    "title": "fix underflow bug during logical negation",
    "user": {
     "login": "matthewvilim",
     "id": 3943274,
     "type": "User"
    },
    "state": "open",
    "comments": 1,
    "created_at": "2016-04-29T23:30:27Z",
    "updated_at": "2016-04-30T00:22:26Z",
    "pull_request": {
     "url": "https://api.github.com/repos/lemire/EWAHBoolArray/pulls/13",
     "html_url": "https://github.com/lemire/EWAHBoolArray/pull/13",
     "diff_url": "https://github.com/lemire/EWAHBoolArray/pull/13.diff",
     "patch_url": "https://github.com/lemire/EWAHBoolArray/pull/13.patch"
    },
    "body": "Underflow occurred when literal word count was 0, resulting in later crashes if vector was used as a logic operand during logic operations. Please advise as to valid solution; the proposed solution below works as far as I've tested it. Thanks."
   },
   "comment": {
    "id": 215913548,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-30T00:22:26Z",
    "updated_at": "2016-04-30T00:22:26Z",
    "body": "Thanks. Your fix looks correct."
   }
  },
  "public": true,
  "created_at": "2016-04-30T00:22:26Z"
 },
 {
  "id": "3955595012",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1090772620,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "36f4a19464d926ead81a67c8210e64ee59c3fb9e": "Reformatting output"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-29T21:35:29Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3955511050",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1090744451,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "43fcffbc1328a96a995b9032fd0c8ca66dfac6cf": "Documenting change."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-29T21:13:28Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3955464438",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1090728371,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "46e936421276476146729a4b3ab91865592ef0fe": "Adding heap unions"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-29T21:01:40Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3955432711",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1090717310,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "eb1c5353b941aaa6a2a26565e892b2de7c8da794": "Updated CRoaring"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-29T20:54:12Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3955428138",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1090715812,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "2c4ef3ece3c1380e541173b65fff2b1c43dd75cb": "Implemented heap-based union"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-29T20:53:09Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3954883193",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1090527655,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "b21680b284a1ddf8555c38510c25ab8eb8e5c9ae": "Just reformatting."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-29T18:41:50Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3954867841",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1090522241,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "9679827bd7af5a84aa3f71d4595623a04636473a": "A few minor fixes."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-29T18:38:26Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3954712938",
  "type": "IssuesEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "action": "opened",
   "issue": {
    "id": 151934409,
    "number": 58,
    "title": "HeapOr could be optimize",
    "labels": [],
    "state": "open",
    "created_at": "2016-04-29T18:03:26Z",
    "updated_at": "2016-04-29T18:03:26Z",
    "body": "The Java version contains many more optimizations..."
   }
  },
  "public": true,
  "created_at": "2016-04-29T18:03:26Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3954701247",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1090465092,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "4dc3fa57614cafc8fb2955afbd836e24354c56d1": "Doing fewer copies."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-29T18:00:46Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3954617063",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1090436481,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "bd9c7e41ff0458e1bdf1502366e3d39a3427e982": "Removed strange piece of code. (It did \"nothing\" except burn CPU cycles?)"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-29T17:41:45Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3954345447",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1090343705,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "43acb1b54fd385ddc04f4ff1cfebe51eed8b3ab2": "Tweaking benchmark slightly"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-29T16:38:42Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3953796484",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1090148714,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "a1765dc458ab2ee4f9bfbdaef46182a367835b1e": "More experiments"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-29T14:44:23Z"
 },
 {
  "id": "3951031087",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1089089227,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "6d25796e3e235a10e9081fc1b6467d99134346b9": "Updating documentation and CRoaring"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-28T22:42:21Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3951026306",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1089087438,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "7854637ba9a21867c997009c8e64adc26a11c4b5": "Converting run containers when and only when it is worth it"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-28T22:40:54Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3949530743",
  "type": "IssuesEvent",
  "repo": {
   "id": 55607349,
   "name": "lemire/SIMDxorshift"
  },
  "payload": {
   "action": "opened",
   "issue": {
    "id": 151696160,
    "number": 1,
    "title": "Produce vectorized version of xoroshiro128+",
    "labels": [],
    "state": "open",
    "created_at": "2016-04-28T17:13:43Z",
    "updated_at": "2016-04-28T17:13:43Z",
    "body": "http://xorshift.di.unimi.it/xoroshiro128plus.c"
   }
  },
  "public": true,
  "created_at": "2016-04-28T17:13:44Z"
 },
 {
  "id": "3946334644",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1087399420,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "7b206ee3ee1c5390552ceae357f2a31e2e970c82": "Checking in fastbit"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-28T03:37:08Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3946302001",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1087386831,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "2f1c0c75931df7c3452e1f5f3d6515ab20cf64d9": "Updating CRoaring to latest version.",
      "846c185715dfd7e35ce77ece5accb2f9cfe4e3f8": "Updating instructions."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-28T03:22:46Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3946294138",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1087383575,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "fe1637ce9b10722c413a91524ae7731a27833ef6": "Updating gitmodules"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-28T03:19:06Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3946276961",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1087376543,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "4a809ddea7a615a7469f65e152bbea45788a425d": "Avoiding a redefine"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-28T03:11:00Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3946261502",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1087370496,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "1a541b01dcb6e4f2fdf88f02e3fae7a51b5e381a": "Avoiding issue"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-28T03:04:08Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3946254400",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1087367726,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "50b96cb50696a91b185985667f1128d9953f6759": "Avoiding warnings."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-28T03:00:56Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3946251623",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1087366628,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "7d7ee99e27dd2f4f1e28d1deb977d42dee45807f": "Removing EWAHBoolArray",
      "0083d8e06efb3d78438887ddbd5318f00b744fdc": "Adding it again."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-28T02:59:47Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3946239092",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1087361676,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "1d17d1bebf6e693e447c0d341ca04a028f363f11": "Better documentation."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-28T02:54:04Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3946227155",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1087356889,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "a921b6328de362224a519b88122d7dc713a01d6d": "Saving..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-28T02:48:35Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3945714868",
  "type": "ForkEvent",
  "repo": {
   "id": 3474578,
   "name": "gingi/fastbit"
  },
  "payload": {
   "forkee": {
    "id": 57255349,
    "name": "fastbit",
    "full_name": "lemire/fastbit",
    "description": "Git mirror for the FastBit library Subversion repository.",
    "fork": true,
    "created_at": "2016-04-27T23:25:55Z",
    "updated_at": "2016-04-20T01:29:43Z",
    "pushed_at": "2015-07-09T16:39:00Z",
    "homepage": "https://sdm.lbl.gov/fastbit/",
    "size": 27036,
    "has_downloads": true,
    "has_wiki": true,
    "default_branch": "master",
    "public": true
   }
  },
  "public": true,
  "created_at": "2016-04-27T23:25:55Z",
  "org": {}
 },
 {
  "id": "3945597010",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1087130433,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "0d4ec8cacc50fe1e3bb860551b6f424ef771f82e": "Minor fixes"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T22:50:09Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3945507458",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1087100221,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "3c8b4d5a6376094bf823a5d910e147b2b99bc1e8": "Missing makefile"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T22:25:29Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3945439414",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1087077132,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "6f8e42478175c8d8d7ef23cb3d7627bb00af5a23": "Cleaner setup"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T22:08:32Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3945234595",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1087007843,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "afa990bf20faf3173568e3532c761abcd4ba08a0": "Mysterious line to silence very strange warning."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T21:22:34Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3945098054",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 151476870,
    "number": 28,
    "title": "getting cmocka warnings",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "state": "open",
    "assignee": {
     "login": "fsaintjacques",
     "id": 662469,
     "avatar_url": "https://avatars.githubusercontent.com/u/662469?v=3",
     "gravatar_id": "",
     "url": "https://api.github.com/users/fsaintjacques",
     "html_url": "https://github.com/fsaintjacques",
     "followers_url": "https://api.github.com/users/fsaintjacques/followers",
     "following_url": "https://api.github.com/users/fsaintjacques/following{/other_user}",
     "gists_url": "https://api.github.com/users/fsaintjacques/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/fsaintjacques/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/fsaintjacques/subscriptions",
     "organizations_url": "https://api.github.com/users/fsaintjacques/orgs",
     "repos_url": "https://api.github.com/users/fsaintjacques/repos",
     "events_url": "https://api.github.com/users/fsaintjacques/events{/privacy}",
     "received_events_url": "https://api.github.com/users/fsaintjacques/received_events",
     "type": "User",
     "site_admin": false
    },
    "comments": 4,
    "created_at": "2016-04-27T19:59:06Z",
    "updated_at": "2016-04-27T20:53:59Z",
    "body": "I am getting ``clobbered`` warnings out of cmocka.\r\n\r\n```bash\r\nCRoaring/tests/vendor/cmocka/cmocka.c: In function 'cmocka_run_one_test_or_fixture':\r\n/Users/lemire/CVS/github/CBitmapCompetition/CRoaring/tests/vendor/cmocka/cmocka.c:2139:9: warning: variable 'rc' might be clobbered by 'longjmp' or 'vfork' [-Wclobbered]\r\n     int rc = 0;\r\n         ^~\r\nCRoaring/tests/vendor/cmocka/cmocka.c: In function 'cmocka_run_one_test_or_fixture.constprop':\r\n/Users/lemire/CVS/github/CBitmapCompetition/CRoaring/tests/vendor/cmocka/cmocka.c:2139:9: warning: variable 'rc' might be clobbered by 'longjmp' or 'vfork' [-Wclobbered]\r\n```\r\n\r\nCan these be safely ignored?"
   },
   "comment": {
    "id": 215225950,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-27T20:53:59Z",
    "updated_at": "2016-04-27T20:53:59Z",
    "body": "It is a small detail. I just wanted to document it."
   }
  },
  "public": true,
  "created_at": "2016-04-27T20:54:00Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3944984729",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 151476870,
    "number": 28,
    "title": "getting cmocka warnings",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "state": "open",
    "assignee": {
     "login": "fsaintjacques",
     "id": 662469,
     "avatar_url": "https://avatars.githubusercontent.com/u/662469?v=3",
     "gravatar_id": "",
     "url": "https://api.github.com/users/fsaintjacques",
     "html_url": "https://github.com/fsaintjacques",
     "followers_url": "https://api.github.com/users/fsaintjacques/followers",
     "following_url": "https://api.github.com/users/fsaintjacques/following{/other_user}",
     "gists_url": "https://api.github.com/users/fsaintjacques/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/fsaintjacques/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/fsaintjacques/subscriptions",
     "organizations_url": "https://api.github.com/users/fsaintjacques/orgs",
     "repos_url": "https://api.github.com/users/fsaintjacques/repos",
     "events_url": "https://api.github.com/users/fsaintjacques/events{/privacy}",
     "received_events_url": "https://api.github.com/users/fsaintjacques/received_events",
     "type": "User",
     "site_admin": false
    },
    "comments": 1,
    "created_at": "2016-04-27T19:59:06Z",
    "updated_at": "2016-04-27T20:30:54Z",
    "body": "I am getting ``clobbered`` warnings out of cmocka.\r\n\r\n```bash\r\nCRoaring/tests/vendor/cmocka/cmocka.c: In function 'cmocka_run_one_test_or_fixture':\r\n/Users/lemire/CVS/github/CBitmapCompetition/CRoaring/tests/vendor/cmocka/cmocka.c:2139:9: warning: variable 'rc' might be clobbered by 'longjmp' or 'vfork' [-Wclobbered]\r\n     int rc = 0;\r\n         ^~\r\nCRoaring/tests/vendor/cmocka/cmocka.c: In function 'cmocka_run_one_test_or_fixture.constprop':\r\n/Users/lemire/CVS/github/CBitmapCompetition/CRoaring/tests/vendor/cmocka/cmocka.c:2139:9: warning: variable 'rc' might be clobbered by 'longjmp' or 'vfork' [-Wclobbered]\r\n```\r\n\r\nCan these be safely ignored?"
   },
   "comment": {
    "id": 215218541,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-27T20:30:54Z",
    "updated_at": "2016-04-27T20:30:54Z",
    "body": "gcc 6.1"
   }
  },
  "public": true,
  "created_at": "2016-04-27T20:30:54Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3944832050",
  "type": "IssuesEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "opened",
   "issue": {
    "id": 151476870,
    "number": 28,
    "title": "getting cmocka warnings",
    "labels": [],
    "state": "open",
    "created_at": "2016-04-27T19:59:06Z",
    "updated_at": "2016-04-27T19:59:06Z",
    "body": "I am getting ``clobbered`` warnings out of cmocka.\r\n\r\n```bash\r\nCRoaring/tests/vendor/cmocka/cmocka.c: In function 'cmocka_run_one_test_or_fixture':\r\n/Users/lemire/CVS/github/CBitmapCompetition/CRoaring/tests/vendor/cmocka/cmocka.c:2139:9: warning: variable 'rc' might be clobbered by 'longjmp' or 'vfork' [-Wclobbered]\r\n     int rc = 0;\r\n         ^~\r\nCRoaring/tests/vendor/cmocka/cmocka.c: In function 'cmocka_run_one_test_or_fixture.constprop':\r\n/Users/lemire/CVS/github/CBitmapCompetition/CRoaring/tests/vendor/cmocka/cmocka.c:2139:9: warning: variable 'rc' might be clobbered by 'longjmp' or 'vfork' [-Wclobbered]\r\n```\r\n\r\nCan these be safely ignored?"
   }
  },
  "public": true,
  "created_at": "2016-04-27T19:59:07Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3943622478",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 57042471,
   "name": "lemire/clhash"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 151413612,
    "number": 2,
    "title": "reserved identifier violation",
    "user": {
     "login": "elfring",
     "id": 660477,
     "type": "User"
    },
    "state": "open",
    "comments": 1,
    "created_at": "2016-04-27T15:21:12Z",
    "updated_at": "2016-04-27T15:55:49Z",
    "body": "I would like to point out that an identifier like \"[`__clmulhalfscalarproductwithoutreduction`](https://github.com/lemire/clhash/blob/17efcf4fbba809d52bc5dc401b7f8d92676fe71c/src/clhash.c#L128 \"Update candidate\")\" [does eventually not fit](https://www.securecoding.cert.org/confluence/display/c/DCL37-C.+Do+not+declare+or+define+a+reserved+identifier \"Do not use identifiers that are reserved for the compiler implementation.\") to the expected naming convention of the C language standard.\r\nWould you like to adjust your selection for unique names?"
   },
   "comment": {
    "id": 215129306,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-27T15:55:49Z",
    "updated_at": "2016-04-27T15:55:49Z",
    "body": "@elfring \r\n\r\nIf you issue a PR to fix this, I will be happy to merge it.\r\n"
   }
  },
  "public": true,
  "created_at": "2016-04-27T15:55:49Z"
 },
 {
  "id": "3942836036",
  "type": "PushEvent",
  "repo": {
   "id": 56382284,
   "name": "CountOnes/hamming_weight"
  },
  "payload": {
   "push_id": 1086180167,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "e0234e930971288ddcdf14e31a4f24e74708c625": "Adding back unrolled twice. And more unit testing."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T13:36:39Z",
  "org": {
   "id": 18499734,
   "login": "CountOnes",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/CountOnes",
   "avatar_url": "https://avatars.githubusercontent.com/u/18499734?"
  }
 },
 {
  "id": "3942826172",
  "type": "PushEvent",
  "repo": {
   "id": 56382284,
   "name": "CountOnes/hamming_weight"
  },
  "payload": {
   "push_id": 1086176768,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "755d8fd49137b27880eb654b4e561e6dcff678f8": "Put back unrolled twice and added more unit testing."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T13:34:47Z",
  "org": {
   "id": 18499734,
   "login": "CountOnes",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/CountOnes",
   "avatar_url": "https://avatars.githubusercontent.com/u/18499734?"
  }
 },
 {
  "id": "3940705105",
  "type": "PushEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "push_id": 1085381580,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "6cf55bc6e311a930734dffaa10bc8f1f49f71811": "[maven-release-plugin] prepare for next development iteration"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T02:39:52Z"
 },
 {
  "id": "3940704830",
  "type": "CreateEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "ref": "JavaEWAH-1.1.6",
   "ref_type": "tag",
   "master_branch": "master",
   "description": "A compressed alternative to the Java BitSet class",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-04-27T02:39:47Z"
 },
 {
  "id": "3940704596",
  "type": "PushEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "push_id": 1085381382,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "51253fc9d60fa35be8b040df5f11905115435b7b": "[maven-release-plugin] prepare release JavaEWAH-1.1.6"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T02:39:41Z"
 },
 {
  "id": "3940699773",
  "type": "PushEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "push_id": 1085379629,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "d63236752a14ae337320af9311cdbc5785825dcb": "Preparing new release"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T02:37:38Z"
 },
 {
  "id": "3940688316",
  "type": "PushEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "push_id": 1085375351,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "cf89bebf106930a31f9daa46cdb33a46306dcd61": "dding more tests..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T02:32:50Z"
 },
 {
  "id": "3940616277",
  "type": "PushEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "push_id": 1085349197,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "3e5412a6423150c135ed57135bd17fc6a3f42659": "Fixed typo in the new test"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T02:03:49Z"
 },
 {
  "id": "3940604071",
  "type": "PushEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "push_id": 1085344781,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "215821843aa658e392a72ada5d76ef3acc001a96": "Even more testing..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T01:59:01Z"
 },
 {
  "id": "3940385638",
  "type": "PushEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "push_id": 1085266788,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "4c7ab2916911835abfa483803befac5c5c914838": "Adding even more tests"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T00:32:09Z"
 },
 {
  "id": "3940384468",
  "type": "PushEvent",
  "repo": {
   "id": 56382284,
   "name": "CountOnes/hamming_weight"
  },
  "payload": {
   "push_id": 1085266358,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "ff32738b15b2f5c787aeb0b094eb701461a6ea75": "Fixing silly problem."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-27T00:31:41Z",
  "org": {
   "id": 18499734,
   "login": "CountOnes",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/CountOnes",
   "avatar_url": "https://avatars.githubusercontent.com/u/18499734?"
  }
 },
 {
  "id": "3940099723",
  "type": "PushEvent",
  "repo": {
   "id": 56382284,
   "name": "CountOnes/hamming_weight"
  },
  "payload": {
   "push_id": 1085169311,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "5a6f730f2e0e9f3064f95372ebdfb4f3589df182": "Adding unit tests"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T22:55:53Z",
  "org": {
   "id": 18499734,
   "login": "CountOnes",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/CountOnes",
   "avatar_url": "https://avatars.githubusercontent.com/u/18499734?"
  }
 },
 {
  "id": "3939996860",
  "type": "PushEvent",
  "repo": {
   "id": 56268793,
   "name": "lemire/FastDifferentialCoding"
  },
  "payload": {
   "push_id": 1085134669,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "35658906793bc29ff15c7b3d216c8ae5ce2c635b": "Adding travis logo"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T22:27:11Z"
 },
 {
  "id": "3939985021",
  "type": "PushEvent",
  "repo": {
   "id": 56268793,
   "name": "lemire/FastDifferentialCoding"
  },
  "payload": {
   "push_id": 1085130576,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "6bfa3348209386ad55ce4c4d65e7974797c335ca": "Adding travis file"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T22:24:04Z"
 },
 {
  "id": "3939587973",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 120180038,
    "number": 46,
    "title": "andCardinality and orCardinality could be faster/use less memory",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "enhancement",
     "help wanted",
     "performance"
    ],
    "state": "open",
    "comments": 1,
    "created_at": "2015-12-03T14:12:44Z",
    "updated_at": "2016-04-26T20:54:55Z",
    "body": "Currently andCardinaly and orCardinality are implemented in such a way that intermediate containers are constructed and immediately discarded. This could be optimized significantly."
   },
   "comment": {
    "id": 214883064,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-26T20:54:55Z",
    "updated_at": "2016-04-26T20:54:55Z",
    "body": "Actually, just implementing a faster andCardinality would be sufficient since we can deduce the union cardinality from the intersection cardinality given the cardinalities of the inputs."
   }
  },
  "public": true,
  "created_at": "2016-04-26T20:54:56Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3939569688",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1084991519,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "494bc93984bb7011e26ef2d2affb6875dde7eee8": "Faster orCardinality"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T20:51:13Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3939566889",
  "type": "IssuesEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "closed",
   "issue": {
    "id": 120180075,
    "number": 56,
    "title": "orCardinality could be faster/use less memory",
    "labels": [
     "enhancement",
     "help wanted",
     "performance"
    ],
    "state": "closed",
    "comments": 3,
    "created_at": "2015-12-03T14:12:56Z",
    "updated_at": "2016-04-26T20:50:37Z",
    "closed_at": "2016-04-26T20:50:37Z",
    "body": "Currently andCardinaly and orCardinality are implemented in such a way that intermediate containers are constructed and immediately discarded. This could be optimized significantly."
   }
  },
  "public": true,
  "created_at": "2016-04-26T20:50:37Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3939566882",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 120180075,
    "number": 56,
    "title": "orCardinality could be faster/use less memory",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "enhancement",
     "help wanted",
     "performance"
    ],
    "state": "closed",
    "comments": 3,
    "created_at": "2015-12-03T14:12:56Z",
    "updated_at": "2016-04-26T20:50:37Z",
    "closed_at": "2016-04-26T20:50:37Z",
    "body": "Currently andCardinaly and orCardinality are implemented in such a way that intermediate containers are constructed and immediately discarded. This could be optimized significantly."
   },
   "comment": {
    "id": 214881915,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-26T20:50:37Z",
    "updated_at": "2016-04-26T20:50:37Z",
    "body": "Resolved as per this commit : \r\nhttps://github.com/RoaringBitmap/RoaringBitmap/commit/35864b42a64b726f78ed80c1f5bd024d2e97007e"
   }
  },
  "public": true,
  "created_at": "2016-04-26T20:50:37Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3939559595",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1084988047,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "35864b42a64b726f78ed80c1f5bd024d2e97007e": "Union cardinality can be computed fast from the intersection cardinality"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T20:49:05Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3939541209",
  "type": "PushEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "push_id": 1084981701,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "89d1b82193d15316c653d9c0beb77805a4993114": "Adding more tests."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T20:45:19Z"
 },
 {
  "id": "3939171510",
  "type": "PushEvent",
  "repo": {
   "id": 57042471,
   "name": "lemire/clhash"
  },
  "payload": {
   "push_id": 1084855660,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "11f3e6891e7431c05e185a01823cb49bd12f3519": "Adding travis logo"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T19:28:53Z"
 },
 {
  "id": "3939165309",
  "type": "PushEvent",
  "repo": {
   "id": 34905043,
   "name": "lemire/FrameOfReference"
  },
  "payload": {
   "push_id": 1084853616,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "2f687217520fbea7206d346c62fbea05e2fe7f3a": "Adding travis logo"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T19:27:34Z"
 },
 {
  "id": "3939159625",
  "type": "PushEvent",
  "repo": {
   "id": 32107971,
   "name": "lemire/lbimproved"
  },
  "payload": {
   "push_id": 1084851738,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "2e927d4f53c1d14eba8f32aebe1a8b7ca269e9dc": "Adding travis logo"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T19:26:19Z"
 },
 {
  "id": "3939154093",
  "type": "PushEvent",
  "repo": {
   "id": 57042471,
   "name": "lemire/clhash"
  },
  "payload": {
   "push_id": 1084849841,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "4ac8ff88337661f4559c5b5211eca0811d2f294b": "Adding travis"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T19:25:07Z"
 },
 {
  "id": "3939147173",
  "type": "PushEvent",
  "repo": {
   "id": 55520750,
   "name": "lemire/LittleIntPacker"
  },
  "payload": {
   "push_id": 1084847554,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "523e7ed1ed68d007501503997614f79dccb3c2f3": "Adding travis."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T19:23:33Z"
 },
 {
  "id": "3939145046",
  "type": "PushEvent",
  "repo": {
   "id": 34905043,
   "name": "lemire/FrameOfReference"
  },
  "payload": {
   "push_id": 1084846823,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "413f00118de4585d3a92489f3d052d2a121a05a7": "Adding travis"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T19:23:06Z"
 },
 {
  "id": "3939140672",
  "type": "PushEvent",
  "repo": {
   "id": 32107971,
   "name": "lemire/lbimproved"
  },
  "payload": {
   "push_id": 1084845378,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "d4349b4444bb3d6b81744007cbf5be537b0cb196": "Adding travis"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T19:22:09Z"
 },
 {
  "id": "3939109405",
  "type": "PushEvent",
  "repo": {
   "id": 57042471,
   "name": "lemire/clhash"
  },
  "payload": {
   "push_id": 1084834991,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "spl3en.contact@gmail.com",
      "name": "Spl3en"
     },
     {
      "17efcf4fbba809d52bc5dc401b7f8d92676fe71c": "Add compatibility with MinGW."
     }
    ],
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "f8494969a3a7b421429477ade338c84dab30d9c5": "Merge pull request #1 from Spl3en/master\n\nAdd compatibility with MinGW."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-26T19:15:26Z"
 },
 {
  "id": "3939109376",
  "type": "PullRequestEvent",
  "repo": {
   "id": 57042471,
   "name": "lemire/clhash"
  },
  "payload": {
   "action": "closed",
   "number": 1,
   "pull_request": {
    "id": 67866908,
    "state": "closed",
    "title": "Add compatibility with MinGW.",
    "body": "With this minor change, the code compiles just fine with MinGW under Windows.",
    "created_at": "2016-04-26T11:10:58Z",
    "updated_at": "2016-04-26T19:15:26Z",
    "closed_at": "2016-04-26T19:15:25Z",
    "merged_at": "2016-04-26T19:15:25Z",
    "merge_commit_sha": "f8494969a3a7b421429477ade338c84dab30d9c5",
    "merged": true,
    "mergeable_state": "unknown",
    "merged_by": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "comments": 1,
    "commits": 1,
    "additions": 3,
    "changed_files": 1
   }
  },
  "public": true,
  "created_at": "2016-04-26T19:15:26Z"
 },
 {
  "id": "3939109153",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 57042471,
   "name": "lemire/clhash"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 151105897,
    "number": 1,
    "title": "Add compatibility with MinGW.",
    "user": {
     "login": "Spl3en",
     "id": 3105948,
     "type": "User"
    },
    "state": "open",
    "comments": 1,
    "created_at": "2016-04-26T11:10:58Z",
    "updated_at": "2016-04-26T19:15:23Z",
    "pull_request": {
     "url": "https://api.github.com/repos/lemire/clhash/pulls/1",
     "html_url": "https://github.com/lemire/clhash/pull/1",
     "diff_url": "https://github.com/lemire/clhash/pull/1.diff",
     "patch_url": "https://github.com/lemire/clhash/pull/1.patch"
    },
    "body": "With this minor change, the code compiles just fine with MinGW under Windows."
   },
   "comment": {
    "id": 214855894,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-26T19:15:23Z",
    "updated_at": "2016-04-26T19:15:23Z",
    "body": "Looks good, thanks!"
   }
  },
  "public": true,
  "created_at": "2016-04-26T19:15:23Z"
 },
 {
  "id": "3933807653",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1082965880,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "8ab0c31802f913962a53fd0ec9d7d5b2594d5342": "Saving..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-25T20:24:43Z"
 },
 {
  "id": "3932961906",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1082685201,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "25fcd9783fa1227d99c5ee6ae7c421d1383d0786": "Saving..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-25T17:29:20Z"
 },
 {
  "id": "3932505517",
  "type": "PushEvent",
  "repo": {
   "id": 961417,
   "name": "lemire/javaewah"
  },
  "payload": {
   "push_id": 1082530782,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "2e9c4e89ab18bafe5f59e15910fce7b4c782a1eb": "Adding a couple of tests"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-25T15:56:47Z"
 },
 {
  "id": "3932484053",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1082523387,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "29d15aa393141f52157eb5b38461ed7731988db7": "Better example"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-25T15:52:51Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3932372027",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 150348628,
    "number": 26,
    "title": "Amazon server issue",
    "user": {
     "login": "ancuop",
     "id": 10288299,
     "type": "User"
    },
    "state": "closed",
    "comments": 8,
    "created_at": "2016-04-22T11:54:38Z",
    "updated_at": "2016-04-25T15:32:24Z",
    "closed_at": "2016-04-22T13:51:04Z",
    "body": "Hi Lemire,\r\n\r\nI'm interested in CRoaring and tried to apply it to my project on amazone server however it causes \"illegal instruction\" error. \r\nI found that the server does not satisfy the CRoaring requirement. \r\n(Amazone server uses: Intel(R) Xeon(R) CPU E5-2666 v3 @ 2.90GHz) \r\n\r\nCould you teach me how to use CRoaing in this case or do you have any trick?\r\nThank you very much."
   },
   "comment": {
    "id": 214397512,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-25T15:32:24Z",
    "updated_at": "2016-04-25T15:32:24Z",
    "body": "@ancuop \r\n\r\nThanks. \r\n\r\n"
   }
  },
  "public": true,
  "created_at": "2016-04-25T15:32:25Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3932317246",
  "type": "PushEvent",
  "repo": {
   "id": 57042471,
   "name": "lemire/clhash"
  },
  "payload": {
   "push_id": 1082466407,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "88c4be3a3e8467516f77890d14f1386a7b0c78ed": "Better readme"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-25T15:22:37Z"
 },
 {
  "id": "3932052708",
  "type": "PushEvent",
  "repo": {
   "id": 10040230,
   "name": "lemire/StronglyUniversalStringHashing"
  },
  "payload": {
   "push_id": 1082373619,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "2c1a5225e42a169f2df26207e0a36a0ab0b7090f": "Adding a reference"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-25T14:36:09Z"
 },
 {
  "id": "3932027997",
  "type": "PushEvent",
  "repo": {
   "id": 57042471,
   "name": "lemire/clhash"
  },
  "payload": {
   "push_id": 1082365142,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "9671a0cc899b3ec69ec21174c26d965005ae4c14": "Cleaner readme"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-25T14:31:56Z"
 },
 {
  "id": "3932019430",
  "type": "PushEvent",
  "repo": {
   "id": 57042471,
   "name": "lemire/clhash"
  },
  "payload": {
   "push_id": 1082362320,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "5898ecef486c205175ffffb29097009c644bd9fb": "Fixing README"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-25T14:30:34Z"
 },
 {
  "id": "3932008701",
  "type": "PushEvent",
  "repo": {
   "id": 57042471,
   "name": "lemire/clhash"
  },
  "payload": {
   "push_id": 1082358586,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "8582718abee6e3d29d2b40e295981b0dc3765c4b": "Initial version",
      "837c1d46108cb8905b7d4bdbc6be570c02ca579a": "Minor tweak to clean"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-25T14:28:39Z"
 },
 {
  "id": "3931600608",
  "type": "CreateEvent",
  "repo": {
   "id": 57042471,
   "name": "lemire/clhash"
  },
  "payload": {
   "ref": "master",
   "ref_type": "branch",
   "master_branch": "master",
   "description": "C library implementing the CLHash fast hashing function",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-04-25T13:08:29Z"
 },
 {
  "id": "3931600519",
  "type": "CreateEvent",
  "repo": {
   "id": 57042471,
   "name": "lemire/clhash"
  },
  "payload": {
   "ref": null,
   "ref_type": "repository",
   "master_branch": "master",
   "description": "C library implementing the CLHash fast hashing function",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-04-25T13:08:28Z"
 },
 {
  "id": "3929600487",
  "type": "PushEvent",
  "repo": {
   "id": 10040230,
   "name": "lemire/StronglyUniversalStringHashing"
  },
  "payload": {
   "push_id": 1081442157,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "5c544032f16654eadd4b37b4cd23ee9fabc6f454": "Script...",
      "aee025afe33fdcdda6d1f972ca58f5b08c633ceb": "Merge branch 'master' of github.com:lemire/StronglyUniversalStringHashing"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-25T00:30:24Z"
 },
 {
  "id": "3929389331",
  "type": "IssuesEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "closed",
   "issue": {
    "id": 134705962,
    "number": 79,
    "title": "Support for integers larger or equal than 1<<31 is buggy/untested",
    "labels": [
     "bug",
     "enhancement",
     "help wanted"
    ],
    "state": "closed",
    "comments": 2,
    "created_at": "2016-02-18T21:47:37Z",
    "updated_at": "2016-04-24T21:27:50Z",
    "closed_at": "2016-04-24T21:27:50Z",
    "body": "The intention of the library is to consider integers as unsigned. So -1 should be considered as 4294967295.\r\n\r\nCurrently, this is not properly tested and generally unsafe. Only positive integers can be used safely.\r\n\r\nWe should improve this.\r\n"
   }
  },
  "public": true,
  "created_at": "2016-04-24T21:27:50Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929389330",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 134705962,
    "number": 79,
    "title": "Support for integers larger or equal than 1<<31 is buggy/untested",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "bug",
     "enhancement",
     "help wanted"
    ],
    "state": "closed",
    "comments": 2,
    "created_at": "2016-02-18T21:47:37Z",
    "updated_at": "2016-04-24T21:27:50Z",
    "closed_at": "2016-04-24T21:27:50Z",
    "body": "The intention of the library is to consider integers as unsigned. So -1 should be considered as 4294967295.\r\n\r\nCurrently, this is not properly tested and generally unsafe. Only positive integers can be used safely.\r\n\r\nWe should improve this.\r\n"
   },
   "comment": {
    "id": 214040372,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-24T21:27:50Z",
    "updated_at": "2016-04-24T21:27:50Z",
    "body": "Fixed thanks to @owenkaser \r\n\r\nsee release 0.6.15 "
   }
  },
  "public": true,
  "created_at": "2016-04-24T21:27:50Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929388698",
  "type": "IssuesEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "closed",
   "issue": {
    "id": 134707035,
    "number": 80,
    "title": "Specifying ranges using 32-bit integers is problematic: ranges should be specified using 64-bit integers or as closed intervals",
    "labels": [
     "discussion",
     "enhancement",
     "help wanted"
    ],
    "state": "closed",
    "comments": 1,
    "created_at": "2016-02-18T21:52:43Z",
    "updated_at": "2016-04-24T21:27:19Z",
    "closed_at": "2016-04-24T21:27:19Z",
    "body": "A bitset can be used to store all integer values. When specifying ranges, the API uses the convention that [begin,end) is intended, that is, the end value is excluded.\r\n\r\nBut suppose you want to indicate as a range all possible integers. How do you do that? You cannot because the end value is never included.\r\n\r\nWe could however be explicit and refer to closed intervals:\r\n\r\nhttps://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html#rangeClosed-int-int-"
   }
  },
  "public": true,
  "created_at": "2016-04-24T21:27:19Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929388697",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 134707035,
    "number": 80,
    "title": "Specifying ranges using 32-bit integers is problematic: ranges should be specified using 64-bit integers or as closed intervals",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "labels": [
     "discussion",
     "enhancement",
     "help wanted"
    ],
    "state": "closed",
    "comments": 1,
    "created_at": "2016-02-18T21:52:43Z",
    "updated_at": "2016-04-24T21:27:19Z",
    "closed_at": "2016-04-24T21:27:19Z",
    "body": "A bitset can be used to store all integer values. When specifying ranges, the API uses the convention that [begin,end) is intended, that is, the end value is excluded.\r\n\r\nBut suppose you want to indicate as a range all possible integers. How do you do that? You cannot because the end value is never included.\r\n\r\nWe could however be explicit and refer to closed intervals:\r\n\r\nhttps://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html#rangeClosed-int-int-"
   },
   "comment": {
    "id": 214040353,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-24T21:27:19Z",
    "updated_at": "2016-04-24T21:27:19Z",
    "body": "Fixed thanks to @owenkaser \r\n\r\nsee release 0.6.15 "
   }
  },
  "public": true,
  "created_at": "2016-04-24T21:27:19Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929376532",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1081338890,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "e62e0a04f919eb854d0a6608da4b13a8aab9e567": "[maven-release-plugin] prepare for next development iteration"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-24T21:18:12Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929376502",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1081338869,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "d35ff9eda794bacb0c350814840182601243f396": "[maven-release-plugin] prepare release RoaringBitmap-0.6.15"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-24T21:18:11Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929376497",
  "type": "CreateEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "ref": "RoaringBitmap-0.6.15",
   "ref_type": "tag",
   "master_branch": "master",
   "description": "A better compressed bitset in Java",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-04-24T21:18:11Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929369698",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1081335773,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "74f3a4edae9b07f79062538d2ac74f427e8c24d8": "Fixed another javadoc issue"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-24T21:13:11Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929360886",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1081331668,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "7a375dee144519b72623a1d0dd4e87d79d10a3e3": "Removing unnecessary method."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-24T21:06:37Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929358595",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1081330581,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "50d435c5f82df78b5d369f4120559e10c3455e95": "Fixing javadoc problems"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-24T21:04:53Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929290307",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1081299904,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "932c5abff24820126d5d01129f383c80d00b66a4": "Disabling a reasonable test because we run out of memory."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-24T20:16:13Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929282406",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1081296357,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "dbd6bb0e1908ef2a53d10112d521b651df009efc": "Preparing new release"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-24T20:10:37Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929217919",
  "type": "PushEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "push_id": 1081267498,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "f292b80692877243664179967e342850a81f8941": "go fmt"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-24T19:23:59Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929191182",
  "type": "PushEvent",
  "repo": {
   "id": 21708754,
   "name": "RoaringBitmap/roaring"
  },
  "payload": {
   "push_id": 1081255822,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "5359532add717cced961ac1acd39cb66662bf0e8": "Moving to 64-bit values for ranges."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-24T19:04:34Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3929170697",
  "type": "PushEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "push_id": 1081246647,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "o.kaser@computer.org",
      "name": "Owen Kaser"
     },
     {
      "5541f2375e52bab8ac5e4dbc0cf562579d09538b": "in-memory support for use of longs for range endpoints",
      "877c6906064c6085ea3fcfcc4da8268314e8f0e5": "changes copied over to the buffer package"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-24T18:49:44Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927812751",
  "type": "PushEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "push_id": 1080623058,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "97fb71c213435d70efbc555956cc9b80f2f80aad": "Starting slowly..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-23T20:33:41Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927800115",
  "type": "CreateEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "ref": "master",
   "ref_type": "branch",
   "master_branch": "master",
   "description": "",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-04-23T20:23:06Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927800108",
  "type": "CreateEvent",
  "repo": {
   "id": 56939217,
   "name": "RoaringBitmap/CBitmapCompetition"
  },
  "payload": {
   "ref": null,
   "ref_type": "repository",
   "master_branch": "master",
   "description": "",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-04-23T20:23:06Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927775350",
  "type": "IssuesEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "opened",
   "issue": {
    "id": 150591679,
    "number": 108,
    "title": "Design a highly compressed serialized format",
    "labels": [
     "discussion",
     "enhancement",
     "help wanted",
     "new feature"
    ],
    "state": "open",
    "created_at": "2016-04-23T20:02:05Z",
    "updated_at": "2016-04-23T20:02:05Z",
    "body": "Currently Roaring is serialized so as to support memory-file mapping. The net result is that the file format is  not as compressed as it could be. We could introduce an alternative format that's more highly compressed but that requires possibly more decoding and encoding effort.\r\n\r\nc.c. @gssiyankai @owenkaser "
   }
  },
  "public": true,
  "created_at": "2016-04-23T20:02:05Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927771340",
  "type": "IssuesEvent",
  "repo": {
   "id": 10746583,
   "name": "RoaringBitmap/RoaringBitmap"
  },
  "payload": {
   "action": "opened",
   "issue": {
    "id": 150591322,
    "number": 107,
    "title": "Evaluate/test core optimizations introduced in CRoaring",
    "labels": [
     "benchmarking",
     "help wanted",
     "performance"
    ],
    "state": "open",
    "created_at": "2016-04-23T19:58:35Z",
    "updated_at": "2016-04-23T19:58:35Z",
    "body": "There is a companion project called CRoaring (https://github.com/RoaringBitmap/CRoaring) which aims to produce faster lower-level Roaring bitmaps.\r\n\r\nAs part of this work, two optimizations have been found (tenatively) to have some benefits.\r\n\r\n\r\n1. Currently, as part of the in-place lazy union, when we encounter two array containers, we proceed as in the non-lazy union. That is, we generate a bitset container if the cardinality is above 4096, and otherwise, we generate an array container.\r\n\r\nhttps://github.com/RoaringBitmap/RoaringBitmap/blob/master/src/main/java/org/roaringbitmap/Container.java#L554\r\n\r\nIn the CRoaring code, we now have a lazy arrayxarray union which always generate a bitset if the total cardinality of the inputs exceeds a threshold (1024).\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/src/containers/mixed_union.c#L181-L199\r\n\r\nTo compensate for this optimization, when calling \"repairAfterLazy\" on a bitset container, we have to convert the bitset container to an array container if the cardinality is insufficient. The code is very simple...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/containers.h#L73-L79\r\n\r\nIn some instances (as in Census1881), this optimization *divided* the running time by almost 4... because we replaced expensive array unions with relatively cheap array-bitset unions.\r\n\r\n2. When checking whether a run container is more economical under \"run optimize\" we always convert even if the run container only saves us a single byte. Instead, we can choose to only convert to a run container if it cuts storage by half...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/blob/master/include/containers/perfparameters.h#L16\r\n\r\nIn theory, this could double the storage requirements, but in practice it brings about a much more modest storage increase, while improving significantly the performance in some cases. So it is a different and maybe more interesting trade-off.\r\n\r\n\r\n\r\n\r\nAnyhow, these are just experimental ideas. They are both very easy to implement, and not difficult to test.\r\n\r\nc.c. @gssiyankai @owenkaser "
   }
  },
  "public": true,
  "created_at": "2016-04-23T19:58:35Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927747876",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1080594346,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "669bf0fd0441e48b2d24003e9c6e25b4853e5910": "Putting the minimal gain at 2"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-23T19:38:16Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927742526",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1080591976,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "c46e277ed81bc37b205ff5d6f3751bfc27363174": "Killing eisenbugs"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-23T19:33:36Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927694908",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1080571013,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "13eaa217bce8af58ce94569b3cb006ab7e715f8b": "Adding a threshold on conversion to run containers"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-23T18:54:16Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927653081",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1080551919,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "97809e41895c39435421cf93fe6cbd2b1f918973": "Using new lazy optimization",
      "7542918a7c07b2cfdb241b24619a2a078f1760db": "Mostly just sorting includes"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-23T18:19:40Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927623038",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1080538547,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "c943807ec1a90c91aec8820b0de1da88e6d7b9b3": "Streamlining the append functions."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-23T17:54:49Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927544277",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1080503562,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "d6f3a0fdeef45cc44bda36e0609053b7566d3f69": "Implemented inplace array-run unions (as in Java)."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-23T16:53:48Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927489151",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1080479554,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "d46893bf8d11c7015c6bff71b34eae2d5abd74f5": "Minor cleaning"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-23T16:11:07Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3927478514",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1080475078,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "71b5b2430262ade84ffc484ca4e228d53348bc69": "These functions should be inline (and ideally tighter)."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-23T16:02:54Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3926785680",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1080172919,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "f6d3a6da6c70f6a09f69724d1194322e02cfdc24": "Tweaking earlier optimization"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-23T04:21:08Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3926755038",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1080159183,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "c25464a2008206e0193bc03faad47568b42bdb32": "Fixing a performance bug."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-23T03:48:35Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3926706510",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1080138127,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "50e464173f7fc73daa731af19ff6a46791f2c2b4": "More thorough checks and fewer leaks in this test.",
      "a22a8cd1acaaec8cf39ca8225dad22bb223d039b": "Reformatting.",
      "4e8d59258ff0fb3e7a920d71dcecb551a09ab3d7": "Added implementation of lazy unions."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-23T02:58:34Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3926216128",
  "type": "PushEvent",
  "repo": {
   "id": 4931095,
   "name": "lemire/JavaFastPFOR"
  },
  "payload": {
   "push_id": 1079954913,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "11e2fbf0d77a626ef7150ea6f87721b9b6213b9c": "[maven-release-plugin] prepare for next development iteration"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-22T22:19:20Z"
 },
 {
  "id": "3926216097",
  "type": "CreateEvent",
  "repo": {
   "id": 4931095,
   "name": "lemire/JavaFastPFOR"
  },
  "payload": {
   "ref": "JavaFastPFOR-0.1.7",
   "ref_type": "tag",
   "master_branch": "master",
   "description": "A simple integer compression library in Java ",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-04-22T22:19:19Z"
 },
 {
  "id": "3926216086",
  "type": "PushEvent",
  "repo": {
   "id": 4931095,
   "name": "lemire/JavaFastPFOR"
  },
  "payload": {
   "push_id": 1079954886,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "890d51fc5dde7eceb9d389136c66ac919f58fa22": "[maven-release-plugin] prepare release JavaFastPFOR-0.1.7"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-22T22:19:19Z"
 },
 {
  "id": "3926213389",
  "type": "PushEvent",
  "repo": {
   "id": 4931095,
   "name": "lemire/JavaFastPFOR"
  },
  "payload": {
   "push_id": 1079953967,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "efbdfd70b5b2d65a8d60d034db387bbe9edd6ed8": "Changing link for see"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-22T22:18:28Z"
 },
 {
  "id": "3926193495",
  "type": "PushEvent",
  "repo": {
   "id": 4931095,
   "name": "lemire/JavaFastPFOR"
  },
  "payload": {
   "push_id": 1079946662,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "4842c942b6060a0e06afa8a59cf66c7fbe6ea405": "Documentation fix."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-22T22:12:15Z"
 },
 {
  "id": "3924152327",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 150374530,
    "number": 27,
    "title": "Project should build and run with AVX_TUNING=OFF",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "state": "open",
    "comments": 2,
    "created_at": "2016-04-22T13:48:24Z",
    "updated_at": "2016-04-22T14:17:45Z",
    "body": "It should be possible to run this code on a machine with no AVX support."
   },
   "comment": {
    "id": 213445509,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-22T14:17:45Z",
    "updated_at": "2016-04-22T14:17:45Z",
    "body": "Anything would be better than our strict requirements.\r\n\r\n\r\n But ultimately, we might like to support non-x64 processor. I'd love to run tests on my Raspberry Pi 3 (with Neon). Whether this needs to be supported in this library, I don't know."
   }
  },
  "public": true,
  "created_at": "2016-04-22T14:17:45Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3924111138",
  "type": "CommitCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "comment": {
    "url": "https://api.github.com/repos/RoaringBitmap/CRoaring/comments/17213693",
    "html_url": "https://github.com/RoaringBitmap/CRoaring/commit/55761a58e6485ed0a0f387da82c63322783c8b8a#commitcomment-17213693",
    "id": 17213693,
    "user": {
     "login": "lemire",
     "id": 391987,
     "avatar_url": "https://avatars.githubusercontent.com/u/391987?v=3",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lemire",
     "html_url": "https://github.com/lemire",
     "followers_url": "https://api.github.com/users/lemire/followers",
     "following_url": "https://api.github.com/users/lemire/following{/other_user}",
     "gists_url": "https://api.github.com/users/lemire/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lemire/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lemire/subscriptions",
     "organizations_url": "https://api.github.com/users/lemire/orgs",
     "repos_url": "https://api.github.com/users/lemire/repos",
     "events_url": "https://api.github.com/users/lemire/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lemire/received_events",
     "type": "User",
     "site_admin": false
    },
    "position": null,
    "line": null,
    "path": "",
    "commit_id": "55761a58e6485ed0a0f387da82c63322783c8b8a",
    "created_at": "2016-04-22T14:09:24Z",
    "updated_at": "2016-04-22T14:09:24Z",
    "body": "@fsaintjacques Evidently, I plan to document things better. But I trust that if you just accept my claim regarding what ``sse_merge`` does, you should be able to figure out the rest."
   }
  },
  "public": true,
  "created_at": "2016-04-22T14:09:24Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3924069199",
  "type": "CommitCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "comment": {
    "url": "https://api.github.com/repos/RoaringBitmap/CRoaring/comments/17213532",
    "html_url": "https://github.com/RoaringBitmap/CRoaring/commit/55761a58e6485ed0a0f387da82c63322783c8b8a#commitcomment-17213532",
    "id": 17213532,
    "user": {
     "login": "lemire",
     "id": 391987,
     "avatar_url": "https://avatars.githubusercontent.com/u/391987?v=3",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lemire",
     "html_url": "https://github.com/lemire",
     "followers_url": "https://api.github.com/users/lemire/followers",
     "following_url": "https://api.github.com/users/lemire/following{/other_user}",
     "gists_url": "https://api.github.com/users/lemire/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lemire/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lemire/subscriptions",
     "organizations_url": "https://api.github.com/users/lemire/orgs",
     "repos_url": "https://api.github.com/users/lemire/repos",
     "events_url": "https://api.github.com/users/lemire/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lemire/received_events",
     "type": "User",
     "site_admin": false
    },
    "position": null,
    "line": null,
    "path": "",
    "commit_id": "55761a58e6485ed0a0f387da82c63322783c8b8a",
    "created_at": "2016-04-22T14:00:44Z",
    "updated_at": "2016-04-22T14:00:44Z",
    "body": "There is a lot going on and a GitHub comment form is not the best medium.\r\n\r\nThe key ingredient is the ``sse_merge`` function. Given two sorted vectors, it merges them, so that you get one virtual \"256-bit\" vector that is sorted, with the smaller values in a first vector (vecMin) and the larger values in a second vector vecMax. It is not hard to understand but I would need a bit of room.\r\n\r\nThis \"almost\" computes the union between the values in two vectors *except* that you might end up with repeated values that you need to prune out. That's where the ``store_unique`` function comes in. That one is, frankly, a bit of a hack I wrote. You should be able to grok it looking at the instructions one by one. More importantly, you might be able to devise something better. I am afraid that my function has very high latency... that may or may not matter, but, what is for sure, is that it is not super elegant.\r\n\r\nThen once you have these two ingredients, basic reasoning should allow you to grok the ``union_vector16`` function which, again, might not be optimal. I just wrote something by reasoning things out.\r\n\r\nc.c. @owenkaser  @nkurz "
   }
  },
  "public": true,
  "created_at": "2016-04-22T14:00:44Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3924037126",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 150348628,
    "number": 26,
    "title": "Amazon server issue",
    "user": {
     "login": "ancuop",
     "id": 10288299,
     "type": "User"
    },
    "state": "closed",
    "comments": 6,
    "created_at": "2016-04-22T11:54:38Z",
    "updated_at": "2016-04-22T13:54:11Z",
    "closed_at": "2016-04-22T13:51:04Z",
    "body": "Hi Lemire,\r\n\r\nI'm interested in CRoaring and tried to apply it to my project on amazone server however it causes \"illegal instruction\" error. \r\nI found that the server does not satisfy the CRoaring requirement. \r\n(Amazone server uses: Intel(R) Xeon(R) CPU E5-2666 v3 @ 2.90GHz) \r\n\r\nCould you teach me how to use CRoaing in this case or do you have any trick?\r\nThank you very much."
   },
   "comment": {
    "id": 213438405,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-22T13:54:11Z",
    "updated_at": "2016-04-22T13:54:11Z",
    "body": "@ancuop  If you do find out that your hardware supports the necessary instructions, you should make sure that your software does. Typically, an \"illegal instruction\" error suggests that either the hardware or the software does not support the instruction. \r\n\r\nIf you have more information for us, feel free to re-open the issue."
   }
  },
  "public": true,
  "created_at": "2016-04-22T13:54:12Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3924022409",
  "type": "IssuesEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "closed",
   "issue": {
    "id": 150348628,
    "number": 26,
    "title": "Amazon server issue",
    "labels": [],
    "state": "closed",
    "comments": 5,
    "created_at": "2016-04-22T11:54:38Z",
    "updated_at": "2016-04-22T13:51:04Z",
    "closed_at": "2016-04-22T13:51:04Z",
    "body": "Hi Lemire,\r\n\r\nI'm interested in CRoaring and tried to apply it to my project on amazone server however it causes \"illegal instruction\" error. \r\nI found that the server does not satisfy the CRoaring requirement. \r\n(Amazone server uses: Intel(R) Xeon(R) CPU E5-2666 v3 @ 2.90GHz) \r\n\r\nCould you teach me how to use CRoaing in this case or do you have any trick?\r\nThank you very much."
   }
  },
  "public": true,
  "created_at": "2016-04-22T13:51:04Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3924022406",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 150348628,
    "number": 26,
    "title": "Amazon server issue",
    "user": {
     "login": "ancuop",
     "id": 10288299,
     "type": "User"
    },
    "state": "closed",
    "comments": 5,
    "created_at": "2016-04-22T11:54:38Z",
    "updated_at": "2016-04-22T13:51:04Z",
    "closed_at": "2016-04-22T13:51:04Z",
    "body": "Hi Lemire,\r\n\r\nI'm interested in CRoaring and tried to apply it to my project on amazone server however it causes \"illegal instruction\" error. \r\nI found that the server does not satisfy the CRoaring requirement. \r\n(Amazone server uses: Intel(R) Xeon(R) CPU E5-2666 v3 @ 2.90GHz) \r\n\r\nCould you teach me how to use CRoaing in this case or do you have any trick?\r\nThank you very much."
   },
   "comment": {
    "id": 213437219,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-22T13:51:04Z",
    "updated_at": "2016-04-22T13:51:04Z",
    "body": "@ancuop  I am going to close this as it is explicitly documented that we do not support old hardware.\r\n\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring#requirements\r\n\r\nNevertheless, supporting legacy hardware is a sensible target, so I have opened an issue...\r\n\r\nhttps://github.com/RoaringBitmap/CRoaring/issues/27\r\n\r\nI am sorry, but we basically do not have the resources to do everything. What we would need is for developers to help out. If you are interested in digging in the code and submitting pull requests, please do."
   }
  },
  "public": true,
  "created_at": "2016-04-22T13:51:04Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3924009265",
  "type": "IssuesEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "opened",
   "issue": {
    "id": 150374530,
    "number": 27,
    "title": "Project should build and run with AVX_TUNING=OFF",
    "labels": [],
    "state": "open",
    "created_at": "2016-04-22T13:48:24Z",
    "updated_at": "2016-04-22T13:48:24Z",
    "body": "It should be possible to run this code on a machine with no AVX support."
   }
  },
  "public": true,
  "created_at": "2016-04-22T13:48:24Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3924005397",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 150348628,
    "number": 26,
    "title": "Amazon server issue",
    "user": {
     "login": "ancuop",
     "id": 10288299,
     "type": "User"
    },
    "state": "open",
    "comments": 4,
    "created_at": "2016-04-22T11:54:38Z",
    "updated_at": "2016-04-22T13:47:37Z",
    "body": "Hi Lemire,\r\n\r\nI'm interested in CRoaring and tried to apply it to my project on amazone server however it causes \"illegal instruction\" error. \r\nI found that the server does not satisfy the CRoaring requirement. \r\n(Amazone server uses: Intel(R) Xeon(R) CPU E5-2666 v3 @ 2.90GHz) \r\n\r\nCould you teach me how to use CRoaing in this case or do you have any trick?\r\nThank you very much."
   },
   "comment": {
    "id": 213435423,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-22T13:47:37Z",
    "updated_at": "2016-04-22T13:47:37Z",
    "body": "@fsaintjacques I'll open an issue."
   }
  },
  "public": true,
  "created_at": "2016-04-22T13:47:38Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3923967145",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 150348628,
    "number": 26,
    "title": "Amazon server issue",
    "user": {
     "login": "ancuop",
     "id": 10288299,
     "type": "User"
    },
    "state": "open",
    "comments": 2,
    "created_at": "2016-04-22T11:54:38Z",
    "updated_at": "2016-04-22T13:39:41Z",
    "body": "Hi Lemire,\r\n\r\nI'm interested in CRoaring and tried to apply it to my project on amazone server however it causes \"illegal instruction\" error. \r\nI found that the server does not satisfy the CRoaring requirement. \r\n(Amazone server uses: Intel(R) Xeon(R) CPU E5-2666 v3 @ 2.90GHz) \r\n\r\nCould you teach me how to use CRoaing in this case or do you have any trick?\r\nThank you very much."
   },
   "comment": {
    "id": 213431457,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-22T13:39:41Z",
    "updated_at": "2016-04-22T13:39:41Z",
    "body": "It might be possible, already, to run CRoaring on old processors, try ``cmake -DAVX_TUNING=OFF``.\r\n\r\nIt may or may not work. It is entirely untested. "
   }
  },
  "public": true,
  "created_at": "2016-04-22T13:39:43Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3921908262",
  "type": "CreateEvent",
  "repo": {
   "id": 56819267,
   "name": "lemire/BitMagic"
  },
  "payload": {
   "ref": "master",
   "ref_type": "branch",
   "master_branch": "master",
   "description": "A copy of the last version (3.7.0) of the BitMagic library published in 2010",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-04-22T02:14:30Z"
 },
 {
  "id": "3921905620",
  "type": "CreateEvent",
  "repo": {
   "id": 56819267,
   "name": "lemire/BitMagic"
  },
  "payload": {
   "ref": null,
   "ref_type": "repository",
   "master_branch": "master",
   "description": "A copy of the last version (3.7.0) of the BitMagic library published in 2010",
   "pusher_type": "user"
  },
  "public": true,
  "created_at": "2016-04-22T02:13:24Z"
 },
 {
  "id": "3921846793",
  "type": "PushEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "push_id": 1078401252,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "55761a58e6485ed0a0f387da82c63322783c8b8a": "Maybe surprisingly, it is possible to compute unions using SSE instructions."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-22T01:47:25Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3921813757",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1078389908,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "dce57dcd76c363fa64ae2dc41ba29791909b74da": "More testing"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-22T01:32:45Z"
 },
 {
  "id": "3921570309",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1078306230,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "ea917e18e1f1af2f91df7173d9e5da3fd90b4c46": "Saving..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T23:54:44Z"
 },
 {
  "id": "3921429747",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1078260254,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "5b3043caab5609b974ad058a6849c98c29bcd9a2": "Saving..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T23:07:30Z"
 },
 {
  "id": "3921418320",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1078256558,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "250a3b50e05d1abd01f6e88f031c67393d33167e": "Some optimization"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T23:03:59Z"
 },
 {
  "id": "3921200054",
  "type": "PushEvent",
  "repo": {
   "id": 26868077,
   "name": "lemire/MaskedVByte"
  },
  "payload": {
   "push_id": 1078184579,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "6a9edc6a8aad85ca268e4bb49d44c9fd77768808": "More references"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T22:04:51Z"
 },
 {
  "id": "3921196919",
  "type": "PushEvent",
  "repo": {
   "id": 15234128,
   "name": "lemire/SIMDCompressionAndIntersection"
  },
  "payload": {
   "push_id": 1078183688,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "7dbddd3a191d7f11b7ffb68852494030520edfd7": "Adding a reference"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T22:04:09Z"
 },
 {
  "id": "3921194694",
  "type": "PushEvent",
  "repo": {
   "id": 4797147,
   "name": "lemire/FastPFor"
  },
  "payload": {
   "push_id": 1078182987,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "144f8cac58231f795a515135dc8abe5036fb505a": "Adding a reference"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T22:03:38Z"
 },
 {
  "id": "3921183503",
  "type": "WatchEvent",
  "repo": {
   "id": 51321909,
   "name": "cruppstahl/libvbyte"
  },
  "payload": {
   "action": "started"
  },
  "public": true,
  "created_at": "2016-04-21T22:00:57Z"
 },
 {
  "id": "3921012923",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1078120672,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "6df19e70a3d8e78745ef67ab86a787184cd014f4": "Saving..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T21:19:19Z"
 },
 {
  "id": "3920815892",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1078053839,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "f5cb84650af116c4b571d72c4b95de960a2bf7d2": "Removing assert"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T20:36:24Z"
 },
 {
  "id": "3920794364",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1078046730,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "0c27a6f1956f2e9504413c8c26fe3fea6ba9e4ae": "Simple trick."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T20:31:53Z"
 },
 {
  "id": "3919489948",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1077602133,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "c75d64d01481a85efacac61f3e0999b2eec120eb": "Saving..."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T15:52:32Z"
 },
 {
  "id": "3919462660",
  "type": "IssuesEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "opened",
   "issue": {
    "id": 150113676,
    "number": 25,
    "title": "Implement memory-optimization functions",
    "labels": [],
    "state": "open",
    "created_at": "2016-04-21T15:47:35Z",
    "updated_at": "2016-04-21T15:47:35Z",
    "body": "Above and beyond the existing run_optimize method, there might be need for a function to optimize the memory usage for bitmaps that are meant to remain immutable in memory. Internally, we use dynamic arrays that tend to use a bit more memory than strictly necessary.\r\n\r\nThis may or may not be worth the effort. It should be assessed."
   }
  },
  "public": true,
  "created_at": "2016-04-21T15:47:35Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3918647201",
  "type": "IssuesEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "closed",
   "issue": {
    "id": 149738967,
    "number": 23,
    "title": "roaring_bitmap_run_optimize() issue",
    "labels": [],
    "state": "closed",
    "comments": 19,
    "created_at": "2016-04-20T11:18:17Z",
    "updated_at": "2016-04-21T13:19:23Z",
    "closed_at": "2016-04-21T13:19:23Z",
    "body": "Hi Lemire,\r\n\r\nI confuse on function  roaring_bitmap_run_optimize(). Could you please help to explain me??\r\nI made a simple test (please see below code), then run in 2 contexts:\r\n1.    Build and run below code normally.\r\n2.    Comment function // roaring_bitmap_run_optimize(reg). Then build and run again\r\n\r\nWhile program is looping, i measure memory usage by command \"pmap  (pid_of_program)\"\r\nI found that size of \"reg\" reduces much however total memory gotten from pmap is not changed.\r\n\r\nI think memory gotten from pmap should reduce after run optimize, is it correct?\r\n\r\n```c\r\nint main(int argc, char** argv) \r\n{\r\n    int i, k, n;\r\n    roaring_bitmap_t *reg;\r\n    uint32_t count;\r\n\r\n    reg = roaring_bitmap_create();\r\n    for (i=0; i<320000000; i++) {\r\n        roaring_bitmap_add(reg, i);\r\n    }\r\n    count = roaring_bitmap_portable_size_in_bytes(reg);\r\n    printf(\"size before optimize: %d\\n\", count);\r\n    roaring_bitmap_run_optimize(reg);  // comment this function to run second test\r\n    count = roaring_bitmap_portable_size_in_bytes(reg);\r\n    printf(\"size after optimize: %d\\n\", count);\r\n    while (1);\r\n}\r\n```\r\n\r\n"
   }
  },
  "public": true,
  "created_at": "2016-04-21T13:19:23Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3918647195",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 149738967,
    "number": 23,
    "title": "roaring_bitmap_run_optimize() issue",
    "user": {
     "login": "ancuop",
     "id": 10288299,
     "type": "User"
    },
    "state": "closed",
    "comments": 19,
    "created_at": "2016-04-20T11:18:17Z",
    "updated_at": "2016-04-21T13:19:23Z",
    "closed_at": "2016-04-21T13:19:23Z",
    "body": "Hi Lemire,\r\n\r\nI confuse on function  roaring_bitmap_run_optimize(). Could you please help to explain me??\r\nI made a simple test (please see below code), then run in 2 contexts:\r\n1.    Build and run below code normally.\r\n2.    Comment function // roaring_bitmap_run_optimize(reg). Then build and run again\r\n\r\nWhile program is looping, i measure memory usage by command \"pmap  (pid_of_program)\"\r\nI found that size of \"reg\" reduces much however total memory gotten from pmap is not changed.\r\n\r\nI think memory gotten from pmap should reduce after run optimize, is it correct?\r\n\r\n```c\r\nint main(int argc, char** argv) \r\n{\r\n    int i, k, n;\r\n    roaring_bitmap_t *reg;\r\n    uint32_t count;\r\n\r\n    reg = roaring_bitmap_create();\r\n    for (i=0; i<320000000; i++) {\r\n        roaring_bitmap_add(reg, i);\r\n    }\r\n    count = roaring_bitmap_portable_size_in_bytes(reg);\r\n    printf(\"size before optimize: %d\\n\", count);\r\n    roaring_bitmap_run_optimize(reg);  // comment this function to run second test\r\n    count = roaring_bitmap_portable_size_in_bytes(reg);\r\n    printf(\"size after optimize: %d\\n\", count);\r\n    while (1);\r\n}\r\n```\r\n\r\n"
   },
   "comment": {
    "id": 212916345,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-21T13:19:23Z",
    "updated_at": "2016-04-21T13:19:23Z",
    "body": "Thank you.  It is clever to use ``valgrind`` for this purpose. I am closing this.\r\n"
   }
  },
  "public": true,
  "created_at": "2016-04-21T13:19:23Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3916465837",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 149828773,
    "number": 24,
    "title": "Gather some test coverage statistics",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "state": "open",
    "comments": 5,
    "created_at": "2016-04-20T17:03:46Z",
    "updated_at": "2016-04-21T01:53:21Z",
    "body": "Maybe like so?\r\n\r\nhttp://stackoverflow.com/questions/13116488/detailed-guide-on-using-gcov-with-cmake-cdash"
   },
   "comment": {
    "id": 212692536,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-21T01:53:21Z",
    "updated_at": "2016-04-21T01:53:21Z",
    "body": "Still the issue remains open. ;-)"
   }
  },
  "public": true,
  "created_at": "2016-04-21T01:53:21Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3916465311",
  "type": "IssueCommentEvent",
  "repo": {
   "id": 47219360,
   "name": "RoaringBitmap/CRoaring"
  },
  "payload": {
   "action": "created",
   "issue": {
    "id": 149828773,
    "number": 24,
    "title": "Gather some test coverage statistics",
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "state": "open",
    "comments": 4,
    "created_at": "2016-04-20T17:03:46Z",
    "updated_at": "2016-04-21T01:53:07Z",
    "body": "Maybe like so?\r\n\r\nhttp://stackoverflow.com/questions/13116488/detailed-guide-on-using-gcov-with-cmake-cdash"
   },
   "comment": {
    "id": 212692507,
    "user": {
     "login": "lemire",
     "id": 391987,
     "type": "User"
    },
    "created_at": "2016-04-21T01:53:07Z",
    "updated_at": "2016-04-21T01:53:07Z",
    "body": "@fsaintjacques \r\n\r\nVery clever. ;-)"
   }
  },
  "public": true,
  "created_at": "2016-04-21T01:53:07Z",
  "org": {
   "id": 16548876,
   "login": "RoaringBitmap",
   "gravatar_id": "",
   "url": "https://api.github.com/orgs/RoaringBitmap",
   "avatar_url": "https://avatars.githubusercontent.com/u/16548876?"
  }
 },
 {
  "id": "3916248148",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1076425289,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "09431828ea44e38fcd6833db73d721de87900ce5": "Working unions."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T00:22:22Z"
 },
 {
  "id": "3916194127",
  "type": "PushEvent",
  "repo": {
   "id": 4797147,
   "name": "lemire/FastPFor"
  },
  "payload": {
   "push_id": 1076407085,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "4fad16dcbef86aa16511a7ab4f33cb860ce0fb92": "More refs."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T00:01:57Z"
 },
 {
  "id": "3916192221",
  "type": "PushEvent",
  "repo": {
   "id": 15234128,
   "name": "lemire/SIMDCompressionAndIntersection"
  },
  "payload": {
   "push_id": 1076406433,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "3c101cc2d43c999cae30ef5c33f275457f705f49": "More refs"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-21T00:01:18Z"
 },
 {
  "id": "3916187980",
  "type": "PushEvent",
  "repo": {
   "id": 4931095,
   "name": "lemire/JavaFastPFOR"
  },
  "payload": {
   "push_id": 1076404969,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "737b4216b2b1f3e2bfe636e3fd85110b68c289bf": "Adding another lib. ref."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-20T23:59:58Z"
 },
 {
  "id": "3916183244",
  "type": "PushEvent",
  "repo": {
   "id": 15234128,
   "name": "lemire/SIMDCompressionAndIntersection"
  },
  "payload": {
   "push_id": 1076403373,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "474ded38cae75dbd5b7a3ac01eb364472803c271": "Adding reference"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-20T23:58:18Z"
 },
 {
  "id": "3916179450",
  "type": "PushEvent",
  "repo": {
   "id": 4797147,
   "name": "lemire/FastPFor"
  },
  "payload": {
   "push_id": 1076402176,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "fe308166db8932b8dc3eeb91afb9ad6e95ce4077": "Adding another reference."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-20T23:57:01Z"
 },
 {
  "id": "3916177120",
  "type": "PushEvent",
  "repo": {
   "id": 4931095,
   "name": "lemire/JavaFastPFOR"
  },
  "payload": {
   "push_id": 1076401363,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "4eab2b38d28c86900ff0c0f88037aa61a4f357f1": "Adding reference."
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-20T23:56:12Z"
 },
 {
  "id": "3916165912",
  "type": "PullRequestEvent",
  "repo": {
   "id": 56633708,
   "name": "Genbox/CSharpFastPFOR"
  },
  "payload": {
   "action": "opened",
   "number": 1,
   "pull_request": {
    "id": 67276923,
    "state": "open",
    "title": "Suggested references",
    "body": "A few references for the curious programmer.",
    "created_at": "2016-04-20T23:52:13Z",
    "updated_at": "2016-04-20T23:52:13Z",
    "merge_commit_sha": "34cf2363fa614cddb0e675dca9ad70b3c2fc39e0",
    "mergeable": true,
    "mergeable_state": "clean",
    "commits": 1,
    "additions": 9,
    "deletions": 1,
    "changed_files": 1,
    "merged_by": {}
   }
  },
  "public": true,
  "created_at": "2016-04-20T23:52:14Z"
 },
 {
  "id": "3916163530",
  "type": "PushEvent",
  "repo": {
   "id": 56728189,
   "name": "lemire/CSharpFastPFOR"
  },
  "payload": {
   "push_id": 1076396787,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "48d61d2ad80ec5ad827e1f8d9fb156dd8ddb3bdb": "Suggested references"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-20T23:51:23Z"
 },
 {
  "id": "3916150923",
  "type": "ForkEvent",
  "repo": {
   "id": 56633708,
   "name": "Genbox/CSharpFastPFOR"
  },
  "payload": {
   "forkee": {
    "id": 56728189,
    "name": "CSharpFastPFOR",
    "full_name": "lemire/CSharpFastPFOR",
    "description": "A C# port of the JavaFastPFOR library by Daniel Lemire",
    "fork": true,
    "created_at": "2016-04-20T23:46:57Z",
    "updated_at": "2016-04-19T21:43:17Z",
    "pushed_at": "2016-04-20T23:12:28Z",
    "size": 203,
    "has_downloads": true,
    "has_wiki": true,
    "default_branch": "master",
    "public": true
   }
  },
  "public": true,
  "created_at": "2016-04-20T23:46:58Z",
  "org": {}
 },
 {
  "id": "3915639774",
  "type": "PushEvent",
  "repo": {
   "id": 3945414,
   "name": "lemire/Code-used-on-Daniel-Lemire-s-blog"
  },
  "payload": {
   "push_id": 1076218497,
   "ref": "refs/heads/master",
   "commits": [
    [
     {
      "email": "lemire@gmail.com",
      "name": "Daniel Lemire"
     },
     {
      "935018821f893213e48b868556a171bd27ab716d": "Applying silly fix"
     }
    ]
   ]
  },
  "public": true,
  "created_at": "2016-04-20T21:25:06Z"
 }
]
